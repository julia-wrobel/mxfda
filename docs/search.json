[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 mxfda authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/mx_fda.html","id":"background-on-functional-data-analysis-for-multiplex-imaging-data","dir":"Articles","previous_headings":"","what":"Background on functional data analysis for multiplex imaging data","title":"mxFDA Object","text":"goals mxfda package? Make easier analyze spatial relationships cells multiplex images Use spatial summary functions point processes characterize univariate / bivariate clustering Relate spatial summary functions patient level outcomes Explain interpret output functional data analyses Use completely open source data Add references relevant papers. Need add references.bib file can cite : Wrobel et al. (2019)","code":""},{"path":"/articles/mx_fda.html","id":"vectrapolarisdata","dir":"Articles","previous_headings":"","what":"VectraPolarisData","title":"mxFDA Object","text":"examples vignette use data VectraPolarisData package Bioconductor’s ExperimentHub. package contains data two multiplex imaging experiments conducted University Colorado Anschutz Medical Campus. shortcourse single-cell multiplex imaging using data available . Describe two datasets Say vignette focus lung data Data preprocessed stored directly package data contains (number subjects, images per subject, number cells). Load data.","code":"# load processed lung cancer data data(lung_df)"},{"path":"/articles/mx_fda.html","id":"setting-up-the-mxfda-object","dir":"Articles","previous_headings":"","what":"Setting up the mxFDA object","title":"mxFDA Object","text":"central object used mxfda package mxFDA object. objects created make_mxfda() hold everything raw spatial data fit functional cox models using derived spatial summary functions. save space large samples, meta data kept separately spatial data needed, exported merged together. Slots mxFDA object follows: Metadata - stores sample specific traits may used covariate fitting models Spatial - data frame cell level information (x, y, phenotype, etc) can used calculate spatial summary functions subject_key - character string column meta data denotes subject samples belong sample_key - character string columns linking meta data spatial data univariate_summaries bivariate_summaries - list calculate spatial summary functions either imported add_summary_function() calculated extract_summary_functions() functional_pca - list functional principle components spatial summary functions functional_mpca - list functional mixed principle components spatial summary functions functional_cox - list functional cox models fit. functional_mcox - list functional mixed cox models fit.","code":""},{"path":"/articles/mx_fda.html","id":"make-fdaobject","dir":"Articles","previous_headings":"Setting up the mxFDA object","what":"Make FDAobject","title":"mxFDA Object","text":"Using ?lung_df mxfda package, columns repeated data pertaining sample level information can extracted stored data frame called clinical cell level information can kept long data frame (instance, make_mxfda() accept list data frames produced reading many data frames samples). spatial parameter make_mxfda() function can left blank using spatial metric derived external functions. final 2 parameters ?lung_df mxFDA object subject_key sample_key. sample_key column name appears metadata spatial 1:1 unique samples subject_key column name metadata ties samples metadata; 1 sample per subject sample_key subject_key 1:1, multiple samples per subject, subject_id repeated.","code":"clinical = lung_df %>%   select(image_id, patient_id, patientImage_id, gender, age, survival_days, survival_status, stage) %>%   distinct()  spatial = lung_df %>%   select(-image_id, -gender, -age, -survival_days, -survival_status, -stage)  mxFDAobject = make_mxfda(metadata = clinical,                          spatial = spatial,                          subject_key = \"patient_id\",                          sample_key = \"patientImage_id\")"},{"path":"/articles/mx_fda.html","id":"spatial-summary-functions-based-on-point-processes","dir":"Articles","previous_headings":"","what":"Spatial summary functions based on point processes","title":"mxFDA Object","text":"Use text somewhere else . Talk K, g, G point links","code":""},{"path":"/articles/mx_fda.html","id":"univariate-summary-functions","dir":"Articles","previous_headings":"Spatial summary functions based on point processes","what":"Univariate summary functions","title":"mxFDA Object","text":"Use text somewhere else describe . calculate univariate Ripley’s K immune cells image. mxfda function extract_summary_functions(). Either univariate bivariate can calculated function depending function supplied extract_func. case looking univariate function extract_univariate(). summary function calculated depends function supplied summary_fun one Kest(), Gest(), Lest() spatstat.explore package (Kcross(), Gcross(), Lcross() bivariate methods). options include supplying vector r values, edge correction method points fall less r edge sample, column spatial data use cell filtering, value filter column . options can provided function ... syntax passed respective spatstat.explore function. calculate K function across range radii 0 100 use isotropic (“iso”) edge correction.","code":"mxFDAobject = extract_summary_functions(mxFDAobject,                                         extract_func = extract_univariate,                                         summary_func = Kest,                                         r_vec = seq(0, 100, by = 1),                                         edge_correction = \"iso\",                                         markvar = \"immune\",                                         mark1 = \"immune\")"},{"path":"/articles/mx_fda.html","id":"plotting-the-mxfda-object","dir":"Articles","previous_headings":"Spatial summary functions based on point processes > Univariate summary functions","what":"Plotting the mxFDA object","title":"mxFDA Object","text":"mxfda S4 methods implemented make looking results feel though ’s part base R. One method plotting using ?plot.mxFDA ties plot(). first argument mxFDA object followed options depending wanting plotted. , want plot univariate summary just calculated K function. passing = 'uni k', plot function extract univariate K results. also need tell plot() column y-axis can 'sumfun' observed value, 'csr' theoretical value complete spatial randomness (CSR), 'fundiff' difference observed K measure theoretical CSR. output plot() ggplot2 object can easily added /manipulated ggplot plot . NOTE: columns calculating using extract_summary_function() mxfda summary data added elsewhere add_summary_function() column names used.  SAY DIFFERENT GET L G","code":"plot(mxFDAobject, y = \"fundiff\", what = \"uni k\") +   geom_hline(yintercept = 0, color = \"red\", linetype = 2) #> Warning: Removed 48 rows containing missing values (`geom_line()`). #rm(Gcrossdf)"},{"path":"/articles/mx_fda.html","id":"bivariate-summary-functions","dir":"Articles","previous_headings":"Spatial summary functions based on point processes","what":"Bivariate summary functions","title":"mxFDA Object","text":"mentioned ability use extract_summary_function() extact bivariate summaries 2 cell types. look relationship T-cells macrophages. images fewer 5 T-cells macrophages, makes estimation less stable images. look T-cells macrophages, data phenotypes cell locations long format first create variable cell types ('phenotype') lung_df. just like can split metadata spatial creating mxFDA object. see 20 27 samples less 5 macrophages T-cells, respectively. Things like need remembered interpreting results also shows larger samples capture cells provide reliable results. calculate bivariate G function, can replace Gcross() Lcross() Kcross() L K bivariate functions. column created called 'phenotype', 2 cell types interested calculating bivariate nearest neighbor G 'T-cell' 'macrophage' provide mark1 mark2, respectively. Automatically removes images least 1 cell type * behavior actually want?","code":"lung_df = lung_df %>%   mutate(phenotype = case_when(phenotype_cd8 == \"CD8+\" ~ \"T-cell\",                                phenotype_cd14 == \"CD14+\" ~ \"macrophage\",                                TRUE ~ \"other\"),          phenotype = factor(phenotype))   lung_df %>%   group_by(patientImage_id) %>%   count(phenotype) %>%   ungroup() %>%   filter(phenotype != \"other\") %>%   group_by(phenotype) %>%   summarize(sum(n < 5)) #> # A tibble: 2 × 2 #>   phenotype  `sum(n < 5)` #>   <fct>             <int> #> 1 macrophage           20 #> 2 T-cell               27 spatial = lung_df %>%   select(-image_id, -gender, -age, -survival_days, -survival_status, -stage)  mxFDAobject = make_mxfda(metadata = clinical,                          spatial = spatial,                          subject_key = \"patient_id\",                          sample_key = \"patientImage_id\") mxFDAobject = extract_summary_functions(mxFDAobject,                 summary_func = Gcross,                 extract_func = extract_bivariate,                 r_vec = seq(0, 100, by = 1),                 edge_correction = \"rs\",                 markvar = \"phenotype\",                 mark1 = \"T-cell\",                 mark2 = \"macrophage\")"},{"path":"/articles/mx_fda.html","id":"plotting-the-bivariate-g","dir":"Articles","previous_headings":"Spatial summary functions based on point processes > Bivariate summary functions","what":"Plotting the bivariate G","title":"mxFDA Object","text":"Just like univariate plots, can use plot() function plot mxFDA object results. now 'bi g', 'bivar g', 'bivariate g'.","code":"plot(mxFDAobject, y = \"fundiff\", what = \"bi g\") +   geom_hline(yintercept = 0, color = \"red\", linetype = 2) #> Warning: Removed 1365 rows containing missing values (`geom_line()`)."},{"path":"/articles/mx_fda.html","id":"exploring-the-s4-object","dir":"Articles","previous_headings":"","what":"Exploring the S4 object","title":"mxFDA Object","text":"Another useful function ?summary.mxFDA feeds summary() method. Either typing name object wrapping summary function provide information like number subjects, samples, spatial summary functions calculated, functional analyses run. things mention?","code":"mxFDAobject #> mxFDA Object: #>  Subjects: 50 #>  Samples: 247 #>  Has spatial data #>  Univariate Summaries: None #>  Bivariate Summaries: Gcross #> FPCs not yet calculated #> MFPCs not yet calculated #> FCMs not yet calculated #> MFCMs not yet calculated"},{"path":"/articles/mx_fda.html","id":"spatialtime","dir":"Articles","previous_headings":"","what":"SpatialTIME","title":"mxFDA Object","text":"Sometimes summary functions normalizations run outside mxfda package end goal still run functional data analysis. packages, spatialTIME provide methods fast calculation functions spatstat permutation estimates complete spatial randomness robust theoretical, especially spatial samples holes violate assumption homogeneous point pattern. Lets look perform estimation univariate nearest neighbor G spatialTIME. central object spatialTIME mIF object, contains list spatial data frames, data frame sample-level summaries, data frame metadata (‘clinical’). creating mxFDA object, spatial data frame clinical data, now convert something works spatialTIME. steps : Creed et al. (2021) convert positive/negative 1/0 integers identify columns spatial data frame cell types convert spatial data frame list, element unique sample create summary data frame spatial list number proportion positive cells phenotype spatial list, clinical, summary data mIF object can constructed. best computation efficiency, use >v1.3.4. Deriving spatial metrics mIF object really easy take time. 10 permutations estimate complete spatial randomness measure nearest neighbor G reduced sampling, 'rs', edge correction. make run faster, look cytotoxic T cells (CD8+) helper T cells (CD4+). spatialTIME, cell types (markers) added data frame. can visualize CD8+ CD4+ ggplot.  Exporting spatial summary function data mIF object accessing list object. However, need make sure data use mxFDA object contains single cell types results. make sure modeling aren’t mixing different cells. extraction filtering new univariate G results keeping cytotoxic T cell results derived univariate nearest neighbor G CD8+, can added mxFDA object add_summary_function(). show , first create new mxFDA object empty spatial slot add new summary function results. Can now use mxfda plot method new data continue analyses done using internal extract_summary_function().","code":"#Step 1 spatialTIME_spatial_df = spatial %>%    select(-X.1, -X, -phenotype) %>%   mutate(across(phenotype_ck:phenotype_cd4, ~ ifelse(grepl(\"\\\\+\", .x), 1, 0))) %>%   relocate(patientImage_id, .before = 1)  #Step 2 cell_types = colnames(spatialTIME_spatial_df) %>% grep(\"phenotype\", ., value = TRUE)  #Step 3 spatial_list = split(spatialTIME_spatial_df, spatial$patientImage_id)  #Step 4 summary_data = lapply(spatial_list, function(df){   df %>%     #group by sample ID to maintain ID column     group_by(patient_id, patientImage_id) %>%     #find number of positive     reframe(across(!!cell_types, ~ sum(.x)),               `Total Cells` = n()) %>%     #calculate proportion     mutate(across(!!cell_types, ~.x/`Total Cells` * 100, .names = \"{.col} %\")) }) %>%   #bind the rows together   do.call(bind_rows, .) library(spatialTIME) #> spatialTIME version: #> 1.3.4.1 #> If using for publication, please cite our manuscript: #> https://doi.org/10.1093/bioinformatics/btab757  #make mif mif = create_mif(clinical_data = clinical,                  sample_data = summary_data,                  spatial_list = spatial_list[1:50],                  patient_id = \"patient_id\",                  sample_id = \"patientImage_id\") mif = NN_G(mif, mnames = cell_types[c(2, 6)],            r_range = 0:100, num_permutations = 10,             edge_correction = \"rs\", keep_perm_dis = FALSE,            workers = 5, overwrite = TRUE, xloc = \"x\", yloc = \"y\") mif$derived$univariate_NN %>%     ggplot() +     geom_line(aes(x = r, y = `Degree of Clustering Permutation`, color = patientImage_id), alpha = 0.4) +     facet_grid(~Marker) +   theme(legend.position = \"none\") #> Warning: Removed 1086 rows containing missing values (`geom_line()`). uni_g = mif$derived$univariate_NN %>%   filter(grepl(\"cd8\", Marker)) #make mxFDA object  mxFDA_spatialTIME = make_mxfda(metadata = clinical,                                spatial = NULL,                                subject_key = \"patient_id\",                                sample_key = \"patientImage_id\") #add summary data mxFDA_spatialTIME = add_summary_function(mxFDAobject,                                          summary_function_data = uni_g,                                          metric = \"uni g\") plot(mxFDA_spatialTIME, y = \"Degree of Clustering Permutation\", what = \"uni g\") #> Warning: Removed 480 rows containing missing values (`geom_line()`)."},{"path":"/articles/mx_fda.html","id":"calculating-and-adding-your-own-spatial-summary-function","dir":"Articles","previous_headings":"","what":"Calculating and adding your own spatial summary function","title":"mxFDA Object","text":"Add example .","code":""},{"path":[]},{"path":"/articles/mx_fpca.html","id":"functional-data-notation","dir":"Articles","previous_headings":"","what":"Functional data notation","title":"Multiplex FPCA","text":"basic unit observation curve \\(Y_i(t)\\) subjects \\(\\\\ldots, \\) cross-sectional setting \\(Y_{ij}(t)\\) subject \\(\\) visit \\(j \\\\ldots, J_i\\) multilevel longitudinal structure. Methods functional data typically presented terms continuous functions, practice data observed discrete grid may sparse dense subject level may across subjects irregular.","code":""},{"path":[]},{"path":"/articles/mx_fpca.html","id":"background-on-fpca","dir":"Articles","previous_headings":"Functional principal components analysis (FPCA)","what":"Background on FPCA","title":"Multiplex FPCA","text":"Background FPCA FPCA characterizes modes variability decomposing functional observations population level basis functions subject-specific scores . basis functions clear interpretation, analogous PCA: first basis function explains largest direction variation, subsequent basis function describes less. FPCA model typically written Y_i(t) = (t) + {k=1}^{K} c{ik}_{k}(t) + _i(t) \\(\\mu(t)\\) population mean, \\(\\psi_{k}(t)\\) set orthonormal population-level basis functions, \\(c_{ik}\\) subject-specific scores mean zero variance \\(\\lambda_k\\), \\(\\epsilon_i(t)\\) residual curves. Estimated basis functions \\(\\widehat{\\psi}_1(t), \\widehat{\\psi}_2(t), \\ldots, \\widehat{\\psi}_{K}(t)\\) corresponding variances \\(\\widehat{\\lambda}_1 \\geq \\widehat{\\lambda}_2 \\geq \\ldots \\geq \\widehat{\\lambda}_K\\) obtained truncated Karhunen-Lo`eve decomposition sample covariance \\(\\widehat{\\Sigma}(s,t) = \\widehat{\\mbox{Cov}}(Y_i(s), Y_i(t))\\). practice, covariance \\(\\widehat{\\Sigma}(s,t)\\) often smoothed using bivariate smoother omits entries main diagonal avoid ``nugget effect” attributable measurement error, scores estimated mixed model framework . truncation lag \\(K\\) often chosen resulting approximation accounts least 95% observed variance.","code":""},{"path":[]},{"path":"/articles/mx_fpca.html","id":"load-and-visualize-data","dir":"Articles","previous_headings":"Functional principal components analysis (FPCA) > Implementing FPCA","what":"Load and visualize data","title":"Multiplex FPCA","text":"load data Ovarian cancer dataset univariate nearest-neighbor G-functions immune cells already extracted. See vignette mxfda::mx_fda details extracting spatial summary functions. functions visualized .","code":"data(\"ovarian_FDA\") ovarian_FDA #> mxFDA Object: #>  Subjects: 128 #>  Samples: 128 #>  Has spatial data #>  Univariate Summaries: Gest #>  Bivariate Summaries: None #> FPCs not yet calculated #> MFPCs not yet calculated #> FCMs not yet calculated #> MFCMs not yet calculated plot(ovarian_FDA, y = \"fundiff\", what = \"uni g\", sampleID = \"patient_id\") +   geom_hline(yintercept = 0, color = \"red\", linetype = 2) +   theme_minimal()"},{"path":"/articles/mx_fpca.html","id":"run-and-visualize-fpca","dir":"Articles","previous_headings":"Functional principal components analysis (FPCA) > Implementing FPCA","what":"Run and visualize FPCA","title":"Multiplex FPCA","text":"Explain plots  INTERPRET LEARNED FPCA- important piece Shout refund.shiny","code":"ovarian_FDA <- run_fpca(ovarian_FDA,                          metric = \"uni g\", r = \"r\",                          value = \"fundiff\",                         pve = .95) ovarian_FDA #> mxFDA Object: #>  Subjects: 128 #>  Samples: 128 #>  Has spatial data #>  Univariate Summaries: Gest #>  Bivariate Summaries: None #> FPCs Calculated: #>  Gest: 4 FPCs describe 96.9% variance #> MFPCs not yet calculated #> FCMs not yet calculated #> MFCMs not yet calculated p1 = plot(ovarian_FDA, what = 'uni g fpca', pc_choice = 1) p2 = plot(ovarian_FDA, what = 'uni g fpca', pc_choice = 2) p3 = plot(ovarian_FDA, what = 'uni g fpca', pc_choice = 3) p4 = plot(ovarian_FDA, what = 'uni g fpca', pc_choice = 4)  (p1 + p2)/(p3 + p4) G_fpca = extract_fpca_object(ovarian_FDA,                              what = \"uni g fpca\", r = \"r\") class(G_fpca) #library(refund.shiny) #plot_shiny(G_fpca)"},{"path":[]},{"path":"/articles/mx_fpca.html","id":"mfpca-background","dir":"Articles","previous_headings":"MFPCA","what":"MFPCA Background","title":"Multiplex FPCA","text":"Background mfpca Multilevel functional principal components analysis (MFPCA) extends ideas FPCA functional data multilevel structure. Multilevel functional data increasingly common practice; case DTI example, structure arises multiple clinical visits made subject. MFPCA models within-subject correlation induced repeated measures well -subject correlation modeled classic FPCA. leads two-level FPC decomposition, level 1 concerns subject-specific effects level 2 concerns visit-specific effects. Population-level basis functions subject-specific scores calculated levels . MFPCA model : \\[     X_{ij}(r) = \\mu(r)  + \\sum_{k_1=1}^{K_1}    c_{ik}^{(1)}\\psi_{k}^{(1)}(r) + \\sum_{k_2=1}^{K_2}c^{(2)}_{ijk}\\psi_{k}^{(2)}(r) + \\epsilon_{ij}(r) \\] \\(\\mu(t)\\) population mean, \\(\\eta_j(t)\\) visit-specific shift overall mean, \\(\\psi_{k}^{(1)}(t)\\) \\(\\psi_{k}^{(2)}(t)\\) eigenfunctions levels 1 2, respectively, \\(c_{ik}^{(1)}\\) \\(c^{(2)}_{ijk}\\) subject-specific subject-visit-specific scores. Often, visit-specific means \\(\\eta_j(t)\\) interest can omitted model. Estimation MFPCA extends approach FPCA: estimated - within-covariances \\(\\widehat{\\Sigma}^{(1)}(s,t) = \\widehat{\\mbox{Cov}}(Y_{ij}(s), Y_{ij'}(t))\\) \\(j \\neq j'\\) \\(\\widehat{\\Sigma}^{(2)}(s,t) = \\widehat{\\mbox{Cov}}(Y_{ij}(s), Y_{ij}(t))\\) derived observed data, smoothed, decomposed obtain eigenfunctions values. Given objects, scores estimated mixed-model framework.","code":""},{"path":"/articles/mx_fpca.html","id":"implementing-mfpca","dir":"Articles","previous_headings":"MFPCA","what":"Implementing MFPCA","title":"Multiplex FPCA","text":"Explain multiple curves per subject MFPCA ’s lung data better mfpca","code":""},{"path":"/articles/mx_fpca.html","id":"extract-spatial-summary-functions-and-visualize-data","dir":"Articles","previous_headings":"MFPCA > Implementing MFPCA","what":"Extract spatial summary functions and visualize data","title":"Multiplex FPCA","text":"extract univariate K function lung data. summary functions within mxfda package, use window created subset cells rather cells core. something keep mind. Visualize  summaries (many total functions? many subjects? Range number functions per subject?)","code":"data(lung_df) clinical = lung_df %>%   select(image_id, patient_id, patientImage_id, gender, age, survival_days, survival_status, stage) %>%   distinct()  spatial = lung_df %>%   select(-image_id, -gender, -age, -survival_days, -survival_status, -stage)  mxFDAobject = make_mxfda(metadata = clinical,                          spatial = spatial,                          subject_key = \"patient_id\",                          sample_key = \"patientImage_id\"                          )  mxFDAobject = extract_summary_functions(mxFDAobject,                                          extract_func = extract_univariate,                                         summary_func = Kest,                                         r_vec = seq(0, 100, by = 1),                                         edge_correction = \"iso\",                                         markvar = \"immune\",                                         mark1 = \"immune\") plot(mxFDAobject, y = \"fundiff\", what = \"uni k\", sampleID = \"patientImage_id\") +   geom_hline(yintercept = 0, color = \"red\", linetype = 2) #> Warning: Removed 48 rows containing missing values (`geom_line()`)."},{"path":"/articles/mx_fpca.html","id":"run-and-visualize-mfpca","dir":"Articles","previous_headings":"MFPCA > Implementing MFPCA","what":"Run and visualize MFPCA","title":"Multiplex FPCA","text":"Right now takes id slots splits hood. need change behavior Explore FPCA object  Calculate variance level 2 scores. Also, ICC","code":"# see what happens when you use mfpca.sc as an engine mxFDAobject <- run_mfpca(mxFDAobject,                         metric = \"uni k\", r = \"r\",                         value = \"fundiff\",                        pve = .99,                        lightweight = FALSE) #plot mxFDA object mFPCA p = plot(mxFDAobject, what = 'uni k mfpca', level1 = 1, level2 = 3)  p[[1]] + p[[2]] #library(refund.shiny) #plot_shiny(mfpca)"},{"path":"/articles/mx_fpca.html","id":"fda-tips-principles-things-to-know","dir":"Articles","previous_headings":"","what":"FDA Tips / Principles/ Things to know","title":"Multiplex FPCA","text":"Sparse vs. even grids- mention , types analysis can Better 20+ measurements per curve- means using dense grid radii Number knots exceed number datapoints per function","code":""},{"path":[]},{"path":"/articles/mx_funreg.html","id":"a-note-on-data-formatting","dir":"Articles","previous_headings":"","what":"A note on data formatting","title":"mx Functional Regression","text":"Use package requires data specific format: long-form data frame variables id, index, value, value column contains functional observations subjects, id column identifies observations belong subject, index provides grid (domain) values observed. variable id unique identifier id identifies single subject. Since assume one curve per subject package, id uniquely identifies curve well. covariates can included data long variables id, index, value present.","code":""},{"path":"/articles/mx_funreg.html","id":"ovarian-cancer-multiplex-imaging-data","dir":"Articles","previous_headings":"","what":"Ovarian cancer multiplex imaging data","title":"mx Functional Regression","text":"load data Ovarian cancer dataset univariate nearest-neighbor G-functions immune cells already extracted. See vignette mxfda::mx_fda details extracting spatial summary functions. Visualize functions . Interpret.","code":"data(\"ovarian_FDA\") plot(ovarian_FDA, y = \"fundiff\", what = \"uni g\") +   geom_hline(yintercept = 0, color = \"red\", linetype = 2) +   theme_minimal()"},{"path":[]},{"path":"/articles/mx_funreg.html","id":"cox-regression-using-functional-principal-components-as-predictors","dir":"Articles","previous_headings":"Functional regression models for survival outcomes","what":"Cox regression using functional principal components as predictors","title":"mx Functional Regression","text":"Runs FPCA appends scores explain 99% variance visualize  Use fpc scores cox regression model","code":"ovarian_FDA <- run_fpca(ovarian_FDA, metric = \"uni g\", r = \"r\", value = \"fundiff\",                         lightweight = TRUE,                         pve = .99) ovarian_FDA #> mxFDA Object: #>  Subjects: 128 #>  Samples: 128 #>  Has spatial data #>  Univariate Summaries: Gest #>  Bivariate Summaries: None #> FPCs Calculated: #>  Gest: 6 FPCs describe 99.2% variance #> MFPCs not yet calculated #> FCMs not yet calculated #> MFCMs not yet calculated Gdf_fpc = extract_fpca_scores(ovarian_FDA, 'uni g fpca')  p1 = Gdf_fpc %>%   ggplot(aes(fpc1, survival_time, color = factor(event))) +   geom_point() + ggtitle(\"fpc1\") +   theme(legend.position = \"none\")  p2 = Gdf_fpc %>%   ggplot(aes(fpc2, survival_time, color = factor(event))) +   geom_point() + ggtitle(\"fpc2\") +   theme(legend.position = \"none\")  p3 = Gdf_fpc %>%   ggplot(aes(fpc3, survival_time, color = factor(event))) +   geom_point() + ggtitle(\"fpc3\") +   theme(legend.position = \"bottom\")  p4 = Gdf_fpc %>%   ggplot(aes(fpc4, survival_time, color = factor(event))) +   geom_point() + ggtitle(\"fpc4\") +   theme(legend.position = \"bottom\")  (p1 + p2)/(p3 + p4) library(survival) phmod_fpc = coxph(Surv(survival_time, event) ~ fpc1 + fpc2 + fpc3 + fpc4 + age,                data = Gdf_fpc)  summary(phmod_fpc) #> Call: #> coxph(formula = Surv(survival_time, event) ~ fpc1 + fpc2 + fpc3 +  #>     fpc4 + age, data = Gdf_fpc) #>  #>   n= 128, number of events= 80  #>  #>          coef exp(coef) se(coef)      z Pr(>|z|)     #> fpc1  1.47768   4.38278  0.27109  5.451 5.01e-08 *** #> fpc2  0.14640   1.15766  0.46700  0.313 0.753907     #> fpc3  4.13781  62.66520  1.10092  3.759 0.000171 *** #> fpc4 -3.34887   0.03512  1.50783 -2.221 0.026352 *   #> age   0.02916   1.02958  0.01119  2.604 0.009201 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #>      exp(coef) exp(-coef) lower .95 upper .95 #> fpc1   4.38278    0.22817  2.576315    7.4559 #> fpc2   1.15766    0.86381  0.463524    2.8913 #> fpc3  62.66520    0.01596  7.243091  542.1618 #> fpc4   0.03512   28.47048  0.001829    0.6746 #> age    1.02958    0.97127  1.007241    1.0524 #>  #> Concordance= 0.709  (se = 0.032 ) #> Likelihood ratio test= 44.38  on 5 df,   p=2e-08 #> Wald test            = 45.34  on 5 df,   p=1e-08 #> Score (logrank) test = 50.34  on 5 df,   p=1e-09"},{"path":"/articles/mx_funreg.html","id":"linear-and-additive-functional-cox-regression-models","dir":"Articles","previous_headings":"Functional regression models for survival outcomes","what":"linear and additive functional Cox regression models","title":"mx Functional Regression","text":"Linear functional cox model takes form: Using age gender stage scalar covariates","code":""},{"path":"/articles/mx_funreg.html","id":"lfcm","dir":"Articles","previous_headings":"Functional regression models for survival outcomes > linear and additive functional Cox regression models","what":"LFCM","title":"mx Functional Regression","text":"Visualize coefficient function","code":"ovarian_FDA = run_fcm(ovarian_FDA, model_name = \"fit_lfcm\",                       formula = survival_time ~ age, event = \"event\",                       metric = \"uni g\", r = \"r\", value = \"fundiff\",                       analysis_vars = c(\"age\", \"survival_time\"),                       afcm = FALSE) class(extract_model(ovarian_FDA, 'uni g', 'fit_lfcm')) #> [1] \"lfcm\" \"gam\"  \"glm\"  \"lm\" summary(extract_model(ovarian_FDA, 'uni g', 'fit_lfcm')) #>  #> Family: Cox PH  #> Link function: identity  #>  #> Formula: #> survival_time ~ age + s(t_int, by = l_int * func, bs = \"cr\",  #>     k = 20) #>  #> Parametric coefficients: #>     Estimate Std. Error z value Pr(>|z|)    #> age  0.03083    0.01136   2.714  0.00664 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                         edf Ref.df Chi.sq  p-value     #> s(t_int):l_int * func 4.286  4.759  41.02 4.76e-07 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Deviance explained = 5.72% #> -REML = 314.14  Scale est. = 1         n = 128 extract_surface(ovarian_FDA, metric = \"uni g\", model = \"fit_lfcm\", analysis_vars = c(\"age\"), se = TRUE) %>%   ggplot(aes(r, exp(beta1))) +   geom_line()+   geom_line(aes(x=r, y = exp(beta1-2*beta1_se)), linetype = 'longdash')+   geom_line(aes(x=r, y = exp(beta1+2*beta1_se)), linetype = 'longdash')+   geom_hline(yintercept = 1, color = \"red\", linetype = 3) +   ylim(0, 15) +   labs(y = expression(e^hat(beta)(r)), title = \"LFCM Hazard Ratio\") +   theme(axis.title = element_text(size = 15))"},{"path":"/articles/mx_funreg.html","id":"afcm","dir":"Articles","previous_headings":"Functional regression models for survival outcomes > linear and additive functional Cox regression models","what":"AFCM","title":"mx Functional Regression","text":"Visualize afcm model","code":"ovarian_FDA <- run_fcm(ovarian_FDA, model_name = \"fit_afcm\",                         formula = survival_time ~ age, event = \"event\",                        metric = \"uni g\", r = \"r\", value = \"fundiff\",                        analysis_vars = c(\"age\", \"survival_time\"),                        afcm = TRUE) class(extract_model(ovarian_FDA, 'uni g', 'fit_afcm')) #> [1] \"afcm\" \"gam\"  \"glm\"  \"lm\" summary(extract_model(ovarian_FDA, 'uni g', 'fit_afcm')) #>  #> Family: Cox PH  #> Link function: identity  #>  #> Formula: #> survival_time ~ age + ti(t_int, func, by = l_int, bs = c(\"cr\",  #>     \"cr\"), k = c(10, 10), mc = c(FALSE, TRUE)) #>  #> Parametric coefficients: #>     Estimate Std. Error z value Pr(>|z|)   #> age  0.02852    0.01162   2.454   0.0141 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                        edf Ref.df Chi.sq p-value     #> ti(t_int,func):l_int 8.248  10.52  55.88  <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Deviance explained = 10.7% #> -REML = 310.05  Scale est. = 1         n = 128 bind_rows(   extract_surface(ovarian_FDA, metric = \"uni g\", model = \"fit_afcm\", analysis_vars = c(\"age\")) %>% mutate(type = \"AFCM surface\"),   extract_surface(ovarian_FDA, metric = \"uni g\", model = \"fit_afcm\", analysis_vars = c(\"age\"), se = TRUE) %>% mutate(type = \"p < 0.05\") ) %>%   mutate(hr = exp(value)) %>%     ggplot(aes(r, sumfun, fill = hr)) +   geom_tile() +    labs(y = \"G value\") +   scale_fill_distiller(name = expression(e^hat(F)(.,.)), na.value = \"transparent\",                      type = \"div\") +   facet_wrap(~type, ncol = 2) +   theme(strip.text = element_text(size = 16))"},{"path":"/articles/mx_funreg.html","id":"model-summaries-and-c-index","dir":"Articles","previous_headings":"","what":"Model summaries and C-index","title":"mx Functional Regression","text":"C-index good way compare across models, especially incorporating cross validation.","code":"# calculate overall p value for fpca #fit_fpc_null = coxph(Surv(survival_time, event) ~  age, data = Gdf_fpc) #p_fpc = anova(fit_fpc_null, phmod_fpc)  fit_afcm = extract_model(ovarian_FDA, 'uni g', 'fit_afcm') fit_lfcm = extract_model(ovarian_FDA, 'uni g', 'fit_lfcm')  c_index = c(   rep(phmod_fpc$concordance[[\"concordance\"]], times = 4),   extract_c(fit_lfcm, Gdf_fpc$survival_time, Gdf_fpc$event),   extract_c(fit_afcm, Gdf_fpc$survival_time, Gdf_fpc$event) )   est_fpca = broom::tidy(phmod_fpc, exp = TRUE) %>%   mutate(model = \"fpca\", edf = NA) %>%   select(model,  term, \"hazard ratio\" = estimate, edf, p = p.value)  est_lfcm = bind_rows(broom::tidy(fit_lfcm) %>%    mutate(\"hazard ratio\" = NA, p = NA, model = \"lfcm\") %>%   select(model, term, \"hazard ratio\", edf, p),   broom::tidy(fit_lfcm, parametric = TRUE, exp = TRUE) %>%    mutate(edf = NA, model = \"lfcm\") %>%   select(model, term, \"hazard ratio\" = estimate, edf, p = p.value) )  est_afcm = bind_rows(broom::tidy(fit_afcm) %>%    mutate(\"hazard ratio\" = NA, p = NA, model = \"afcm\") %>%   select(model, term, \"hazard ratio\", edf, p),   broom::tidy(fit_afcm, parametric = TRUE, exp = TRUE) %>%    mutate(edf = NA, model = \"afcm\") %>%   select(model, term, \"hazard ratio\" = estimate, edf, p = p.value) )  bind_rows(est_fpca, est_lfcm, est_afcm) %>%   filter(term != \"age\") %>%   mutate(p = format.pval(p, digits = 1),          \"c-index\" = c_index) %>%   knitr::kable(digits = 2)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julia Wrobel. Author, maintainer. Alex Soupir. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wrobel J, Soupir (2023). mxfda: Package (Title Case- stuff). https://github.com/julia-wrobel/mxfda, https://julia-wrobel.github.io/mxfda.","code":"@Manual{,   title = {mxfda: What the Package Does (Title Case- stuff)},   author = {Julia Wrobel and Alex Soupir},   year = {2023},   note = {https://github.com/julia-wrobel/mxfda, https://julia-wrobel.github.io/mxfda}, }"},{"path":"/index.html","id":"mxfda","dir":"","previous_headings":"","what":"What the Package Does (Title Case- stuff)","title":"What the Package Does (Title Case- stuff)","text":"functional data analysis package point pattern data","code":""},{"path":"/index.html","id":"installing-mxfda-to-r","dir":"","previous_headings":"","what":"Installing mxFDA to R","title":"What the Package Does (Title Case- stuff)","text":"install, devtools remotes package required install_github() function:","code":"#install devtools if not available if (!require(\"devtools\", quietly = TRUE))   install.packages(\"devtools\")  #install from github devtools::install_github(\"julia-wrobel/mxfda\")"},{"path":"/index.html","id":"vignettes-and-function-references","dir":"","previous_headings":"","what":"Vignettes and Function References","title":"What the Package Does (Title Case- stuff)","text":"interested documentation -’s, please see https://julia-wrobel.github.io/mxfda","code":""},{"path":"/index.html","id":"github-code","dir":"","previous_headings":"","what":"GitHub Code","title":"What the Package Does (Title Case- stuff)","text":"raw code can found GitHub page clicking GitHub symbol upper right pkgdown site https://github.com/julia-wrobel/mxfda","code":""},{"path":"/reference/Gcross.html","id":null,"dir":"Reference","previous_headings":"","what":"Gcross — Gcross","title":"Gcross — Gcross","text":"See spatstat.explore::Gcross","code":""},{"path":"/reference/Gest.html","id":null,"dir":"Reference","previous_headings":"","what":"Gest — Gest","title":"Gest — Gest","text":"See spatstat.explore::Gest","code":""},{"path":"/reference/Kcross.html","id":null,"dir":"Reference","previous_headings":"","what":"Kcross — Kcross","title":"Kcross — Kcross","text":"See spatstat.explore::Kcross","code":""},{"path":"/reference/Kest.html","id":null,"dir":"Reference","previous_headings":"","what":"Kest — Kest","title":"Kest — Kest","text":"See spatstat.explore::Kest","code":""},{"path":"/reference/Lcross.html","id":null,"dir":"Reference","previous_headings":"","what":"Lcross — Lcross","title":"Lcross — Lcross","text":"See spatstat.explore::Lcross","code":""},{"path":"/reference/Lest.html","id":null,"dir":"Reference","previous_headings":"","what":"Lest — Lest","title":"Lest — Lest","text":"See spatstat.explore::Lest","code":""},{"path":"/reference/add_summary_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Summary Function — add_summary_function","title":"Add Summary Function — add_summary_function","text":"Sometimes ways calculating summary functions wanted done packages, instance data can loaded mxFDA object.","code":""},{"path":"/reference/add_summary_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Summary Function — add_summary_function","text":"","code":"add_summary_function(mxFDAobject, summary_function_data, metric)"},{"path":"/reference/add_summary_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Summary Function — add_summary_function","text":"mxFDAobject object class mxFDA summary_function_data data frame summary_key mxFDA object key column summary function metric character vector either 'uni' 'bi' 'k', 'l', 'g'; e.g. 'uni g'","code":""},{"path":"/reference/add_summary_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Summary Function — add_summary_function","text":"updated mxFDA object derived value added","code":""},{"path":"/reference/add_summary_function.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add Summary Function — add_summary_function","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/add_summary_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Summary Function — add_summary_function","text":"","code":"#set seed set.seed(333)"},{"path":"/reference/extract_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_bivariate — extract_bivariate","title":"extract_bivariate — extract_bivariate","text":"Internal function called extract_summary_functions calculate bivariate spatial summary function single image.","code":""},{"path":"/reference/extract_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_bivariate — extract_bivariate","text":"","code":"extract_bivariate(   mximg,   markvar,   mark1,   mark2,   r_vec,   func = c(Kcross, Lcross, Gcross),   edge_correction )"},{"path":"/reference/extract_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_bivariate — extract_bivariate","text":"mximg Dataframe cell-level multiplex imaging data single image. variables x y denote x y spatial locations cell. markvar name variable denotes cell type(s) interest. Character. mark1 Character string denotes first cell type interest. mark2 Character string denotes second cell type interest. r_vec Numeric vector radii evaluate spatial summary functions. Must begin 0. func Spatial summary function calculate. Options c(Kcross, Lcross, Gcross) denote Ripley's K, Besag's L, nearest neighbor G function, respectively. edge_correction Character string denotes edge correction method spatial summary function. Kcross Lcross choose one c(\"border\", \"isotropic\", \"Ripley\", \"translate\", \"none\"). Gcross choose one c(\"rs\", \"km\", \"han\")","code":""},{"path":"/reference/extract_bivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_bivariate — extract_bivariate","text":"data.frame containing: r radius values spatial summary function evaluated sumfun values spatial summary function csr values spatial summary function complete spatial randomness fundiff sumfun - csr, positive values indicate clustering negative values repulsion","code":""},{"path":"/reference/extract_bivariate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"extract_bivariate — extract_bivariate","text":"Xiao, L., Ruppert, D., Zipunnikov, V., Crainiceanu, C. (2016). Fast covariance estimation high-dimensional functional data. Statistics Computing, 26, 409-421. DOI: 10.1007/s11222-014-9485-x.","code":""},{"path":"/reference/extract_bivariate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_bivariate — extract_bivariate","text":"Julia Wrobel julia.wrobel@cuanschutz.edu","code":""},{"path":"/reference/extract_bivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract_bivariate — extract_bivariate","text":"","code":"# simulate data set.seed(1001)"},{"path":"/reference/extract_c.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_c — extract_c","title":"extract_c — extract_c","text":"Function calculate c-index AFCM LFCM fit","code":""},{"path":"/reference/extract_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_c — extract_c","text":"","code":"extract_c(fit, survival_time, event)"},{"path":"/reference/extract_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_c — extract_c","text":"fit fit AFCM LFCM model fit object. survival_time Vector survival/censoring times event Survival statust (0 = censored, 1 = event)","code":""},{"path":"/reference/extract_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_c — extract_c","text":"c-index","code":""},{"path":"/reference/extract_c.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_c — extract_c","text":"Erjia Cui","code":""},{"path":"/reference/extract_fpca_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract FPCA object — extract_fpca_object","title":"Extract FPCA object — extract_fpca_object","text":"Extract FPCA object","code":""},{"path":"/reference/extract_fpca_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract FPCA object — extract_fpca_object","text":"","code":"extract_fpca_object(mxFDAobject, what)"},{"path":"/reference/extract_fpca_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract FPCA object — extract_fpca_object","text":"mxFDAobject object class mxFDA functional PCA data extract, e.g. 'uni k'","code":""},{"path":"/reference/extract_fpca_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract FPCA object — extract_fpca_object","text":"fpca object","code":""},{"path":"/reference/extract_fpca_object.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract FPCA object — extract_fpca_object","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_fpca_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract FPCA object — extract_fpca_object","text":"","code":"#set seed set.seed(333)"},{"path":"/reference/extract_fpca_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract FPCA scores — extract_fpca_scores","title":"Extract FPCA scores — extract_fpca_scores","text":"Extract FPCA scores","code":""},{"path":"/reference/extract_fpca_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract FPCA scores — extract_fpca_scores","text":"","code":"extract_fpca_scores(mxFDAobject, what)"},{"path":"/reference/extract_fpca_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract FPCA scores — extract_fpca_scores","text":"mxFDAobject object class mxFDA functional PCA data extract, e.g. 'uni k'","code":""},{"path":"/reference/extract_fpca_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract FPCA scores — extract_fpca_scores","text":"fpca object","code":""},{"path":"/reference/extract_fpca_scores.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract FPCA scores — extract_fpca_scores","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_fpca_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract FPCA scores — extract_fpca_scores","text":"","code":"#load ovarian mxFDA object data('ovarian_FDA')  #run ghe lfcm model ovarian_FDA = run_fcm(ovarian_FDA, model_name = \"fit_lfcm\",                       formula = survival_time ~ age, event = \"event\",                       metric = \"uni g\", r = \"r\", value = \"fundiff\",                       analysis_vars = c(\"age\", \"survival_time\"),                       afcm = FALSE)  #extract uni fpc scores fpc = extract_fpca_scores(ovarian_FDA, 'uni g fpca')"},{"path":"/reference/extract_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Model — extract_model","title":"Extract Model — extract_model","text":"Currently extracts functional cox models mixed functional cox models.","code":""},{"path":"/reference/extract_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Model — extract_model","text":"","code":"extract_model(mxFDAobject, what, model_name)"},{"path":"/reference/extract_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Model — extract_model","text":"mxFDAobject object class mxFDA functional PCA data extract, e.g. 'uni k' model_name character string model name retrieve","code":""},{"path":"/reference/extract_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Model — extract_model","text":"fit functional model","code":""},{"path":"/reference/extract_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Model — extract_model","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Model — extract_model","text":"","code":"#load ovarian mxFDA object data('ovarian_FDA')  #run ghe lfcm model ovarian_FDA = run_fcm(ovarian_FDA, model_name = \"fit_lfcm\",                       formula = survival_time ~ age, event = \"event\",                       metric = \"uni g\", r = \"r\", value = \"fundiff\",                       analysis_vars = c(\"age\", \"survival_time\"),                       afcm = FALSE)  #extract model mod = extract_model(ovarian_FDA, 'uni g', 'fit_lfcm')"},{"path":"/reference/extract_spatial_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise spatial data in mxFDA object — extract_spatial_summary","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"Summarise spatial data mxFDA object","code":""},{"path":"/reference/extract_spatial_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"","code":"extract_spatial_summary(mxFDAobject, columns, grouping_columns = NULL)"},{"path":"/reference/extract_spatial_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"mxFDAobject object class mxFDA columns character vector column heading cells summarise grouping_columns character vector columns use grouping, region classification column","code":""},{"path":"/reference/extract_spatial_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"data frame percent total points per spatial sample column positive ","code":""},{"path":"/reference/extract_spatial_summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_spatial_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"","code":"#set seed set.seed(333)"},{"path":"/reference/extract_summary_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_summary_functions — extract_summary_functions","title":"extract_summary_functions — extract_summary_functions","text":"main function fastGFPCA package. function requires input data Y dataframe long format variables id, index, value indicate subject IDs, observation times domain, observations, respectively. index must contain , equally spaced grid points subject. number functional principal components (FPCs) can either specified directly (argument npc) chosen based explained share variance (pve). Families link functions can specified using syntax family argument lme4::glmer() function.","code":""},{"path":"/reference/extract_summary_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_summary_functions — extract_summary_functions","text":"","code":"extract_summary_functions(   mxFDAobject,   r_vec = seq(0, 100, by = 10),   extract_func = c(extract_univariate, extract_bivariate),   summary_func = c(Kest, Lest, Gest),   markvar,   mark1,   mark2 = NULL,   edge_correction )"},{"path":"/reference/extract_summary_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_summary_functions — extract_summary_functions","text":"mxFDAobject object class mxFDA r_vec Numeric vector radii evaluate spatial summary functions. Must begin 0. extract_func Defaults extract_univariate, calculates univariate spatial summary functions. Choose extract_bivariate bivariate spatial summary functions. summary_func Spatial summary function calculate. Options c(Kest, Lest, Gest) denote Ripley's K, Besag's L, nearest neighbor G function, respectively. markvar name variable denotes cell type(s) interest. Character. mark1 Character string denotes first cell type interest. mark2 Character string denotes second cell type interest calculating bivariate summary statistics. used calculating univariate statistics. edge_correction Character string denotes edge correction method spatial summary function. Kest Lest choose one c(\"border\", \"isotropic\", \"Ripley\", \"translate\", \"none\"). Gest choose one c(\"rs\", \"km\", \"han\")","code":""},{"path":"/reference/extract_summary_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_summary_functions — extract_summary_functions","text":"data.frame containing: image_patient_id unique image id r radius values spatial summary function evaluated sumfun values spatial summary function csr values spatial summary function complete spatial randomness fundiff sumfun - csr, positive values indicate clustering negative values repulsion","code":""},{"path":"/reference/extract_summary_functions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"extract_summary_functions — extract_summary_functions","text":"Xiao, L., Ruppert, D., Zipunnikov, V., Crainiceanu, C. (2016). Fast covariance estimation high-dimensional functional data. Statistics Computing, 26, 409-421. DOI: 10.1007/s11222-014-9485-x.","code":""},{"path":"/reference/extract_summary_functions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_summary_functions — extract_summary_functions","text":"Julia Wrobel julia.wrobel@cuanschutz.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_summary_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract_summary_functions — extract_summary_functions","text":"","code":"# simulate data set.seed(1001)"},{"path":"/reference/extract_surface.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_surface — extract_surface","title":"extract_surface — extract_surface","text":"Internal function called TITLE: regression function transforms long format functional data use linear additive functional Cox model.","code":""},{"path":"/reference/extract_surface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_surface — extract_surface","text":"","code":"extract_surface(   mxFDAobject,   metric,   model = NULL,   r = \"r\",   value = \"fundiff\",   grid_length = 100,   analysis_vars,   se = FALSE,   filter_cols = NULL )"},{"path":"/reference/extract_surface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_surface — extract_surface","text":"mxFDAobject object class mxFDA model model calculated wihtin metric spatial summary function extract surface model character string name model metric data r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". grid_length Length grid evaluate coefficient functions. analysis_vars variables used modeling FCM fit. se Defaults FALSE, returns surface. TRUE, returns coefficient function standard errors LFCM, coefficient surface AFCM non NA values statistically significant filter_cols named vector factors filter summary functions c(Derived_Column = \"Level_to_Filter\") format","code":""},{"path":"/reference/extract_surface.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_surface — extract_surface","text":"dataframe predicted surface AFCM LFCM fits use plotting","code":""},{"path":"/reference/extract_surface.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_surface — extract_surface","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_surface.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract_surface — extract_surface","text":"","code":"# simulate data set.seed(1001)"},{"path":"/reference/extract_univariate.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_univariate — extract_univariate","title":"extract_univariate — extract_univariate","text":"Internal function called extract_summary_functions calculate univariate spatial summary function single image.","code":""},{"path":"/reference/extract_univariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_univariate — extract_univariate","text":"","code":"extract_univariate(   mximg,   markvar,   mark1,   mark2,   r_vec,   func = c(Kest, Lest, Gest),   edge_correction )"},{"path":"/reference/extract_univariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_univariate — extract_univariate","text":"mximg Dataframe cell-level multiplex imaging data single image. variables x y denote x y spatial locations cell. markvar name variable denotes cell type(s) interest. Character. mark1 dummy filler, unused mark2 dummy filler, unused r_vec Numeric vector radii evaluate spatial summary functions. Must begin 0. func Spatial summary function calculate. Options c(Kest, Lest, Gest) denote Ripley's K, Besag's L, nearest neighbor G function, respectively. edge_correction Character string denotes edge correction method spatial summary function. Kest Lest choose one c(\"border\", \"isotropic\", \"Ripley\", \"translate\", \"none\"). Gest choose one c(\"rs\", \"km\", \"han\")","code":""},{"path":"/reference/extract_univariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_univariate — extract_univariate","text":"data.frame containing: r radius values spatial summary function evaluated sumfun values spatial summary function csr values spatial summary function complete spatial randomness fundiff sumfun - csr, positive values indicate clustering negative values repulsion","code":""},{"path":"/reference/extract_univariate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_univariate — extract_univariate","text":"Julia Wrobel julia.wrobel@emory.edu","code":""},{"path":"/reference/extract_univariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract_univariate — extract_univariate","text":"","code":"# simulate data set.seed(1001)"},{"path":"/reference/filter_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Spatial data — filter_spatial","title":"Filter Spatial data — filter_spatial","text":"function filter spatial data slot mxFDA object.","code":""},{"path":"/reference/filter_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Spatial data — filter_spatial","text":"","code":"filter_spatial(mxFDAobject, ..., force = FALSE)"},{"path":"/reference/filter_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Spatial data — filter_spatial","text":"mxFDAobject object class mxFDA ... expressions return logical TRUE/FALSE value evaluated columns spatial data slot. expressions get passed dplyr::filter() must compatible. force logical whether return empty spatial data filtering results 0 rows","code":""},{"path":"/reference/filter_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Spatial data — filter_spatial","text":"mxFDAobject updated spatial slot","code":""},{"path":"/reference/filter_spatial.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Spatial data — filter_spatial","text":"dplyr::filter()","code":""},{"path":"/reference/filter_spatial.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter Spatial data — filter_spatial","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/filter_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Spatial data — filter_spatial","text":"","code":"#load ovarian mxFDA object data(ovarian_FDA)  #filter ages greater than 50 ovarian_FDA_age50 = filter_spatial(ovarian_FDA, age >= 50)"},{"path":"/reference/impute_fpca.html","id":null,"dir":"Reference","previous_headings":"","what":"impute_fpca — impute_fpca","title":"impute_fpca — impute_fpca","text":"Internal function called TITLE: regression function imputes missing data functional predictors using FPCA.","code":""},{"path":"/reference/impute_fpca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"impute_fpca — impute_fpca","text":"","code":"impute_fpca(   mxfundata,   id,   r = \"r\",   value = \"fundiff\",   knots = NULL,   analysis_vars,   smooth )"},{"path":"/reference/impute_fpca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"impute_fpca — impute_fpca","text":"mxfundata Dataframe spatial summary functions multiplex imaging data, long format. Can estimated using function extract_summary_functions provided separately. id Character string, name variable identifies unique subject. r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". knots Number knots defining spline basis. analysis_vars Optional list variables retained downstream analysis. smooth Option smooth data using FPCA.","code":""},{"path":"/reference/impute_fpca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"impute_fpca — impute_fpca","text":"dataframe missing function values (NA) value variable replaced estimates FPCA.","code":""},{"path":"/reference/impute_fpca.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"impute_fpca — impute_fpca","text":"Julia Wrobel julia.wrobel@emory.edu","code":""},{"path":"/reference/impute_fpca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"impute_fpca — impute_fpca","text":"","code":"# simulate data set.seed(1001)"},{"path":"/reference/lung_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplex imaging data from a non-small cell lung cancer study. — lung_df","title":"Multiplex imaging data from a non-small cell lung cancer study. — lung_df","text":"data adapted VectraPolarisData Bioconductor package. multiple ROIs patient.","code":""},{"path":"/reference/lung_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplex imaging data from a non-small cell lung cancer study. — lung_df","text":"","code":"lung_df"},{"path":[]},{"path":"/reference/lung_df.html","id":"lung-df","dir":"Reference","previous_headings":"","what":"lung_df","title":"Multiplex imaging data from a non-small cell lung cancer study. — lung_df","text":"data frame 879,694 rows 19 columns: image_id Image id given patient patient_id Unique patient id age Patient age time cancer diagnosis survival_days Survival time diagnosis, days survival_status Censoring variable, 1 = death, 0 = censor x Cell x position y Cell y position","code":""},{"path":"/reference/lung_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Multiplex imaging data from a non-small cell lung cancer study. — lung_df","text":"https://bioconductor.org/packages/release/data/experiment/html/VectraPolarisData.html","code":""},{"path":"/reference/make_mxfda.html","id":null,"dir":"Reference","previous_headings":"","what":"Make mxFDA class object — make_mxfda","title":"Make mxFDA class object — make_mxfda","text":"Used create object class mxFDA can used mxfda package functional data analysis.","code":""},{"path":"/reference/make_mxfda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make mxFDA class object — make_mxfda","text":"","code":"make_mxfda(metadata, spatial = NULL, subject_key, sample_key)"},{"path":"/reference/make_mxfda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make mxFDA class object — make_mxfda","text":"metadata metadata column key samples spatial spatial information, either list df, column key. spatial can empty inputting data already derived subject_key column name subject ID sample_key column linking metadata spatial data","code":""},{"path":"/reference/make_mxfda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make mxFDA class object — make_mxfda","text":"object class mxFDA","code":""},{"path":[]},{"path":"/reference/make_mxfda.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make mxFDA class object — make_mxfda","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/make_mxfda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make mxFDA class object — make_mxfda","text":"","code":"#select sample metadata clinical = lung_df %>%   dplyr::select(image_id, patient_id, patientImage_id,                 gender, age, survival_days, survival_status, stage) %>%   dplyr::distinct() #select the spatial information spatial = lung_df %>%   dplyr::select(-image_id, -gender, -age, -survival_days, -survival_status, -stage) sample_id_column = \"patientImage_id\" #create the mxFDA object mxFDAobject = make_mxfda(metadata = clinical,                          spatial = spatial,                          subject_key = \"patient_id\",                          sample_key = sample_id_column)"},{"path":"/reference/mxfda-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mxfda: What the Package Does (Title Case- stuff) — mxfda-package","title":"mxfda: What the Package Does (Title Case- stuff) — mxfda-package","text":"(maybe one line) Use four spaces indenting paragraphs within Description.","code":""},{"path":[]},{"path":"/reference/mxfda-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mxfda: What the Package Does (Title Case- stuff) — mxfda-package","text":"Maintainer: Julia Wrobel julia.wrobel@emory.edu (ORCID) Authors: Alex Soupir (ORCID)","code":""},{"path":"/reference/ovarian_FDA.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","title":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","text":"data adapted VectraPolarisData Bioconductor package comes tumor-microarray tissue samples 128 patients ovarian cancer. one patient per subject.","code":""},{"path":"/reference/ovarian_FDA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","text":"","code":"ovarian_FDA"},{"path":[]},{"path":"/reference/ovarian_FDA.html","id":"ovarian-fda","dir":"Reference","previous_headings":"","what":"ovarian_FDA","title":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","text":"mxFDA object augmented ovarian cancer multiplex immunofluorescence data, NN G(r) calculated: Metadata information spatial samples column sample_key column Spatial cell-level information x y columns along sample_key link Metadata subject_key column Metadata may multiple sample_key values , akin patient IDs sample_key column Metadata Spatial 1:1 samples (unique per sample) univariate_summaries univariate summary slot nearest neighbor G calculared bivariate_summaries empty slot available bivariate summaries functional_pca empty slot functional PCA data summaries functional_cox empty slot functional models","code":""},{"path":"/reference/ovarian_FDA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","text":"https://bioconductor.org/packages/release/data/experiment/html/VectraPolarisData.html","code":""},{"path":"/reference/ovarian_FDA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","text":"Spatial summary functions ovarian cancer multiplex imaging data. data adapted VectraPolarisData Bioconductor package. Signal survival outcome spatial summary functions augmented teaching purposes. Spatial relationship summarized using nearest neighbor G function.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot.mxFDA.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot mxFDA object — plot.mxFDA","title":"Plot mxFDA object — plot.mxFDA","text":"Plot mxFDA object","code":""},{"path":"/reference/plot.mxFDA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot mxFDA object — plot.mxFDA","text":"","code":"# S3 method for mxFDA plot(x, filter_cols = NULL, ...)"},{"path":"/reference/plot.mxFDA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot mxFDA object — plot.mxFDA","text":"x object class mxFDA plotted filter_cols column key filter multiple metrics included derived table, extra parameter filter_cols format c(Derived_Column = \"Level_to_Filter\") return curves Derived_Column level Level_to_Filter plotting mFPCA objects, additional arguments level1 level2 help indicate FPCA level 1 level 2 plot ... additional paramters including y, , sampleID inform whats plotted","code":""},{"path":"/reference/plot.mxFDA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot mxFDA object — plot.mxFDA","text":"object compatable ggplot2","code":""},{"path":"/reference/plot.mxFDA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot mxFDA object — plot.mxFDA","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/plot.mxFDA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot mxFDA object — plot.mxFDA","text":"","code":"#set seed set.seed(333)"},{"path":"/reference/plot_fpc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","text":"Produces ggplot mean plus minus two standard deviations selected FPC.","code":""},{"path":"/reference/plot_fpc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","text":"","code":"plot_fpc(obj, pc_choice)"},{"path":"/reference/plot_fpc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","text":"obj fpca object plotted. pc_choice FPC plotted.","code":""},{"path":"/reference/plot_fpc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","text":"object class ggplot","code":""},{"path":"/reference/plot_fpc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","text":"Julia Wrobel julia.wrobel@emory.edu","code":""},{"path":"/reference/plot_mfpc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","text":"Produces ggplot mean plus minus two standard deviations selected FPC.","code":""},{"path":"/reference/plot_mfpc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","text":"","code":"plot_mfpc(obj, pc_choice_level1, pc_choice_level2)"},{"path":"/reference/plot_mfpc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","text":"obj fpca object plotted. pc_choice_level1, pc_choice_level2 FPC plotted.","code":""},{"path":"/reference/plot_mfpc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","text":"list objects class ggplot","code":""},{"path":"/reference/plot_mfpc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","text":"Julia Wrobel julia.wrobel@emory.edu","code":""},{"path":"/reference/process_fcm.html","id":null,"dir":"Reference","previous_headings":"","what":"process_fcm — process_fcm","title":"process_fcm — process_fcm","text":"Internal function called TITLE: regression function transforms long format functional data use linear additive functional Cox model.","code":""},{"path":"/reference/process_fcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"process_fcm — process_fcm","text":"","code":"process_fcm(   mxfundata,   id,   r = \"r\",   value = \"fundiff\",   analysis_vars,   quantile_transform )"},{"path":"/reference/process_fcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"process_fcm — process_fcm","text":"mxfundata Dataframe spatial summary functions multiplex imaging data, long format. Can estimated using function extract_summary_functions provided separately. id Character string, name variable identifies unique subject. r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". analysis_vars Optional list variables retained downstream analysis. quantile_transform TRUE, quantile transformation applied functional predictor modeling","code":""},{"path":"/reference/process_fcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"process_fcm — process_fcm","text":"dataframe matrix-valued covariates l_int, t_int, func use linear additive functional Cox model.","code":""},{"path":"/reference/process_fcm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"process_fcm — process_fcm","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/process_fcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"process_fcm — process_fcm","text":"","code":"# simulate data set.seed(1001)"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. spatstat.explore Gcross, Gest, Kcross, Kest, Lcross, Lest","code":""},{"path":"/reference/run_fcm.html","id":null,"dir":"Reference","previous_headings":"","what":"process_fcm — run_fcm","title":"process_fcm — run_fcm","text":"Fit functional Cox regression model.","code":""},{"path":"/reference/run_fcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"process_fcm — run_fcm","text":"","code":"run_fcm(   mxFDAobject,   model_name,   formula,   event = \"event\",   metric = \"uni k\",   r = \"r\",   value = \"fundiff\",   afcm = FALSE,   analysis_vars = NULL,   quantile_transform = FALSE,   smooth = FALSE,   filter_cols = NULL,   ...,   knots = NULL )"},{"path":"/reference/run_fcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"process_fcm — run_fcm","text":"mxFDAobject Dataframe spatial summary functions multiplex imaging data, long format. Can estimated using function extract_summary_functions provided separately. model_name character string give fit model functional cox slot formula Formula fed mgcv form survival_time ~ x1 + x2. contain functional predictor. Character valued. Data must contain censoring variable called \"event\". event character string column Metadata contains 1/0 survival event metric name calculated spatial metric use r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". afcm TRUE, runs additive functional Cox model. FALSE, runs linear functional cox model. Defaults linear functional cox model. analysis_vars List variables retained downstream analysis, including variables formula. quantile_transform Defaults FALSE. TRUE, quantile transformation applied functional predictor modeling using process_fcm function. smooth Option smooth data using FPCA. Defaults FALSE. filter_cols named vector factors filter summary functions c(Derived_Column = \"Level_to_Filter\") format ... Optional arguments passed fpca.face knots Number knots defining spline basis.","code":""},{"path":"/reference/run_fcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"process_fcm — run_fcm","text":"list linear additive functional Cox model fit. See mgcv::gam details.","code":""},{"path":"/reference/run_fcm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"process_fcm — run_fcm","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/run_fcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"process_fcm — run_fcm","text":"","code":"#load ovarian mxFDA object data('ovarian_FDA')  #run ghe lfcm model ovarian_FDA = run_fcm(ovarian_FDA, model_name = \"fit_lfcm\",                       formula = survival_time ~ age, event = \"event\",                       metric = \"uni g\", r = \"r\", value = \"fundiff\",                       analysis_vars = c(\"age\", \"survival_time\"),                       afcm = FALSE)"},{"path":"/reference/run_fpca.html","id":null,"dir":"Reference","previous_headings":"","what":"run_fpca — run_fpca","title":"run_fpca — run_fpca","text":"wrapper function fpca.face refund package. EXPAND","code":""},{"path":"/reference/run_fpca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_fpca — run_fpca","text":"","code":"run_fpca(   mxFDAobject,   metric = \"uni k\",   r = \"r\",   value = \"fundiff\",   knots = NULL,   analysis_vars = NULL,   lightweight = FALSE,   filter_cols = NULL,   ... )"},{"path":"/reference/run_fpca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_fpca — run_fpca","text":"mxFDAobject object class mxFDA created make_mxfda metrics derived extract_summary_functions metric name calculated spatial metric use r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". knots Number knots defining spline basis.Defaults number measurements per function divided 2. analysis_vars Optional list variables retained downstream analysis. lightweight Default FALSE. TRUE, removes Y Yhat returned FPCA object. good option select large datasets. filter_cols named vector factors filter summary functions c(Derived_Column = \"Level_to_Filter\") format ... Optional arguments passed fpca.face","code":""},{"path":"/reference/run_fpca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_fpca — run_fpca","text":"mxFDA object containing: mxfundata original dataframe spatial summary functions, scores FPCA appended downstream modeling fpc_object list class \"fpca\" elements described documentation  refund::fpca.face","code":""},{"path":"/reference/run_fpca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"run_fpca — run_fpca","text":"Xiao, L., Ruppert, D., Zipunnikov, V., Crainiceanu, C. (2016). Fast covariance estimation high-dimensional functional data. Statistics Computing, 26, 409-421. DOI: 10.1007/s11222-014-9485-x.","code":""},{"path":"/reference/run_fpca.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"run_fpca — run_fpca","text":"Julia Wrobel julia.wrobel@cuanschutz.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/run_fpca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"run_fpca — run_fpca","text":"","code":"#load ovarian mxFDA object data('ovarian_FDA')  #run the FPCA ovarian_FDA = run_fpca(ovarian_FDA, metric = \"uni g\", r = \"r\", value = \"fundiff\",                        lightweight = TRUE,                        pve = .99)"},{"path":"/reference/run_mfpca.html","id":null,"dir":"Reference","previous_headings":"","what":"run_fpca — run_mfpca","title":"run_fpca — run_mfpca","text":"wrapper function mfpca.face refund package. EXPAND","code":""},{"path":"/reference/run_mfpca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_fpca — run_mfpca","text":"","code":"run_mfpca(   mxFDAobject,   metric = \"uni k\",   r = \"r\",   value = \"fundiff\",   knots = NULL,   analysis_vars = NULL,   lightweight = FALSE,   ...,   twoway = FALSE )"},{"path":"/reference/run_mfpca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_fpca — run_mfpca","text":"mxFDAobject object class mxFDA created make_mxfda metrics derived extract_summary_functions metric name calculated spatial metric use r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". knots Number knots defining spline basis.Defaults number measurements per function divided 2. analysis_vars Optional list variables retained downstream analysis. lightweight Default FALSE. TRUE, removes Y Yhat returned mFPCA object. good option select large datasets. ... Optional arguments passed mfpca.face twoway whether model within within sample variability ()","code":""},{"path":"/reference/run_mfpca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_fpca — run_mfpca","text":"mxFDA object containing: mxfundata original dataframe spatial summary functions, scores FPCA appended downstream modeling fpc_object list class \"fpca\" elements described documentation  refund::fpca.face","code":""},{"path":"/reference/run_mfpca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"run_fpca — run_mfpca","text":"Xiao, L., Ruppert, D., Zipunnikov, V., Crainiceanu, C. (2016). Fast covariance estimation high-dimensional functional data. Statistics Computing, 26, 409-421. DOI: 10.1007/s11222-014-9485-x.","code":""},{"path":"/reference/run_mfpca.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"run_fpca — run_mfpca","text":"unknown first.last@domain.extension Julia Wrobel julia.wrobel@cuanschutz.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/run_mfpca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"run_fpca — run_mfpca","text":"","code":"# simulate data set.seed(1001)"},{"path":"/reference/summary.mxFDA.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for object of class mxFDA — summary.mxFDA","title":"Summary method for object of class mxFDA — summary.mxFDA","text":"Summary method object class mxFDA","code":""},{"path":"/reference/summary.mxFDA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for object of class mxFDA — summary.mxFDA","text":"","code":"# S3 method for mxFDA summary(object, ...)"},{"path":"/reference/summary.mxFDA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for object of class mxFDA — summary.mxFDA","text":"object object class mxFDA ... unused currently","code":""},{"path":"/reference/summary.mxFDA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for object of class mxFDA — summary.mxFDA","text":"summary object","code":""},{"path":"/reference/summary.mxFDA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary method for object of class mxFDA — summary.mxFDA","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/summary.mxFDA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary method for object of class mxFDA — summary.mxFDA","text":"","code":"#set seed set.seed(333)"},{"path":[]},{"path":"/news/index.html","id":"mxfda-v010","dir":"Changelog","previous_headings":"","what":"mxfda v0.1.0","title":"mxfda v0.1.0","text":"starting package ","code":""}]
