[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 mxfda authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/mx_fda.html","id":"vectrapolarisdata","dir":"Articles","previous_headings":"","what":"VectraPolarisData","title":"Defining an mxFDA object","text":"Examples package use data adapted VectraPolarisData package Bioconductor’s ExperimentHub. package contains data two multiplex imaging experiments conducted University Colorado Anschutz Medical Campus. shortcourse single-cell multiplex imaging using data available . Data preprocessed stored directly mxfda package. Available datasets ovarian_FDA lung_df. vignette focus lung_df dataset, contains subset 50 subjects multiplex imaging study non-small cell lung carcinoma described Johnson et al. (2021). subject 3-5 multiplex images, come different regions interest (ROIs) tumor. ROI considered “sample” constructing mxfda object. load lung cancer data .","code":"data(lung_df)"},{"path":"/articles/mx_fda.html","id":"setting-up-the-mxfda-object","dir":"Articles","previous_headings":"","what":"Setting up the mxFDA object","title":"Defining an mxFDA object","text":"central object used mxfda package mxFDA object. objects created make_mxfda() hold everything raw spatial data fit functional data models using derived spatial summary functions. save space large samples, metadata kept separately spatial data needed, exported merged together. Slots mxFDA object designated follows: Metadata - stores sample specific traits may used covariates fitting models Spatial - data frame cell level information (x y spatial coordinates, phenotype, etc.) can used calculate spatial summary functions subject_key - character string column metadata denotes unique subject ID sample_key - character string column metadata denotes unique sample ID. Note may multiple samples per subject, ID links metadata spatial data multiplex image sample univariate_summaries bivariate_summaries - lists spatial summary functions either imported add_summary_function() calculated extract_summary_functions() functional_pca - list results functional principle component analysis functional_mpca - list results multilevel functional principle component analysis functional_cox - list functional cox models fit","code":""},{"path":"/articles/mx_fda.html","id":"make-mxfdaobject","dir":"Articles","previous_headings":"Setting up the mxFDA object","what":"Make mxFDAobject","title":"Defining an mxFDA object","text":"Using ?lung_df mxfda package, columns repeated data pertaining sample-level information extracted stored data frame called clinical cell-level information kept long data frame (make_mxfda() also accepts cell-level information list data frames). spatial parameter make_mxfda() function can left blank using spatial metric derived external functions. final 2 parameters ?lung_df mxFDA object subject_key sample_key. sample_key column name appears metadata spatial denotes unique samples subject_key column name metadata ties samples metadata; data contains one sample per subject sample_key subject_key 1:1, multiple samples per subject, subject_id repeated. Note object created class mxFDA.","code":"clinical = lung_df %>%   select(image_id, patient_id, patientImage_id, gender, age, survival_days, survival_status, stage) %>%   distinct()  spatial = lung_df %>%   select(-image_id, -gender, -age, -survival_days, -survival_status, -stage)  mxFDAobject = make_mxfda(metadata = clinical,                          spatial = spatial,                          subject_key = \"patient_id\",                          sample_key = \"patientImage_id\") class(mxFDAobject) #> [1] \"mxFDA\" #> attr(,\"package\") #> [1] \"mxfda\""},{"path":"/articles/mx_fda.html","id":"spatial-summary-functions-based-on-point-processes","dir":"Articles","previous_headings":"","what":"Spatial summary functions based on point processes","title":"Defining an mxFDA object","text":"mxfda package provides methods analyzing spatial relationships cell types single cell imaging data based point process theory. location cells image samples treated following point process, realizations point process called “point patterns”, point process models seek understand correlations spatial distributions cells. assumption rate cell constant entire region interest point pattern exhibit complete spatial randomness (CSR), often interest model whether cells deviate CSR either clustering repulsion. Spatial summary statistics can calculated quantify clustering co-occurrence cells circular region particular radius r. Typically univariate (one cell type) bivariate (two cell types) summary statistics reported, inference obtained comparing observed spatial summary statistic obtained CSR. popular quantity Ripley’s K(r), studies number neighbors particular point within radius r, univariate bivariate implementations spatstat package (Baddeley, Rubak, Turner (2015)). Ripley’s K characterized clustering repulsion depending whether theoretical value \\(\\pi r^2\\). spatial summary statistics analyze distance neighbor, can interpreted probabilities observing particular cell type within radius r. One metrics, G(r), nearest neighbor distance distribution, cumulative distribution function exponential random variable. detailed overviews spatial summary functions multiplex imaging data provided C. M. Wilson et al. (2021) Wrobel, Harris, Vandekar (2023).","code":""},{"path":"/articles/mx_fda.html","id":"univariate-summary-functions","dir":"Articles","previous_headings":"Spatial summary functions based on point processes","what":"Univariate summary functions","title":"Defining an mxFDA object","text":"calculate univariate Ripley’s K summarize spatial relationship among immune cells image. mxfda package accomplishes function extract_summary_functions(). Either univariate bivariate can calculated function depending choice supplied extract_func argument. calculate univariate spatial summary supply univariate extract_func argument. summary function calculated depends function supplied summary_fun one Kest(), Gest(), Lest() spatstat.explore package (Kcross(), Gcross(), Lcross() bivariate methods). options include supplying vector radius values r_vec, specific edge correction (see Baddeley, Rubak, Turner (2015)). calculate K function across range radii 0 100 use isotropic (“iso”) edge correction. See Baddeley, Rubak, Turner (2015) details edge corrections Ripley’s K nearest neighbor G. Running code calculate univariate Ripley’s K function measure spatial clustering immune cells sample, store spatial summary functions univariate_summaries slot mxFDAobject. access slot view extracted summary functions, type: Note summaries returned dataframe. variable sumfun estimated summary function value, csr theoretical value complete spatial randomness, fundiff = sumfun-csr describes “degree clustering beyond expected due chance; downstream analysis use fundiff covariate.","code":"mxFDAobject = extract_summary_functions(mxFDAobject,                                         extract_func = univariate,                                         summary_func = Kest,                                         r_vec = seq(0, 100, by = 1),                                         edge_correction = \"iso\",                                         markvar = \"immune\",                                         mark1 = \"immune\") mxFDAobject@univariate_summaries$Kest #> # A tibble: 24,847 × 6 #>    patientImage_id     r sumfun    csr fundiff `immune cells` #>    <chr>           <dbl>  <dbl>  <dbl>   <dbl>          <int> #>  1 2_1                 0      0   0       0                 6 #>  2 2_1                 1      0   3.14   -3.14              6 #>  3 2_1                 2      0  12.6   -12.6               6 #>  4 2_1                 3      0  28.3   -28.3               6 #>  5 2_1                 4      0  50.3   -50.3               6 #>  6 2_1                 5      0  78.5   -78.5               6 #>  7 2_1                 6      0 113.   -113.                6 #>  8 2_1                 7      0 154.   -154.                6 #>  9 2_1                 8      0 201.   -201.                6 #> 10 2_1                 9      0 254.   -254.                6 #> # ℹ 24,837 more rows"},{"path":"/articles/mx_fda.html","id":"plotting-the-mxfda-object","dir":"Articles","previous_headings":"Spatial summary functions based on point processes > Univariate summary functions","what":"Plotting the mxFDA object","title":"Defining an mxFDA object","text":"mxfda S4 methods visualization implemented via plot() function (see ?plot.mxFDA details). first argument mxFDA object followed options depend plot output desired. , want plot univariate summary just calculated, K function. passing = 'uni k', plot function extract univariate K results. also need tell plot() column y-axis can 'sumfun' observed value, 'csr' theoretical value complete spatial randomness (CSR), 'fundiff' difference observed K measure theoretical CSR. output plot() ggplot2 object can easily added /manipulated ggplot plot . NOTE: columns calculating using extract_summary_function() mxfda summary data added elsewhere add_summary_function() column names used.","code":"plot(mxFDAobject, y = \"fundiff\", what = \"uni k\") +   geom_hline(yintercept = 0, color = \"red\", linetype = 2) #> Warning: Removed 48 rows containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"/articles/mx_fda.html","id":"bivariate-summary-functions","dir":"Articles","previous_headings":"Spatial summary functions based on point processes","what":"Bivariate summary functions","title":"Defining an mxFDA object","text":"extract_summary_functions() function can also used extract bivariate summaries comparing spatial clustering 2 cell types. look relationship T-cells macrophages. images fewer 5 T-cells macrophages, makes estimation spatial summary functions less stable images. look T-cells macrophages, data phenotypes cell locations long format first create variable cell types ('phenotype') lung_df. recreate mxFDAobject Now calculate bivariate G function, can replace Gcross() Lcross() Kcross() estimate L K bivariate functions instead. argument markvar takes variable created called 'phenotype', 2 cell types interested calculating bivariate G 'T-cell' 'macrophage' provide mark1 mark2, respectively.","code":"lung_df = lung_df %>%   mutate(phenotype = case_when(phenotype_cd8 == \"CD8+\" ~ \"T-cell\",                                phenotype_cd14 == \"CD14+\" ~ \"macrophage\",                                TRUE ~ \"other\"),          phenotype = factor(phenotype)) spatial = lung_df %>%   select(-image_id, -gender, -age, -survival_days, -survival_status, -stage)  mxFDAobject = make_mxfda(metadata = clinical,                          spatial = spatial,                          subject_key = \"patient_id\",                          sample_key = \"patientImage_id\") mxFDAobject = extract_summary_functions(mxFDAobject,                 summary_func = Gcross,                 extract_func = bivariate,                 r_vec = seq(0, 100, by = 1),                 edge_correction = \"rs\",                 markvar = \"phenotype\",                 mark1 = \"T-cell\",                 mark2 = \"macrophage\")"},{"path":"/articles/mx_fda.html","id":"plotting-bivariate-g","dir":"Articles","previous_headings":"Spatial summary functions based on point processes > Bivariate summary functions","what":"Plotting bivariate G","title":"Defining an mxFDA object","text":"Just like univariate plots, can use plot() function plot mxFDA object results. now 'bi g', 'bivar g', 'bivariate g'.","code":"plot(mxFDAobject, y = \"fundiff\", what = \"bi g\") +   geom_hline(yintercept = 0, color = \"red\", linetype = 2) #> Warning: Removed 1365 rows containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"/articles/mx_fda.html","id":"exploring-the-s4-object","dir":"Articles","previous_headings":"","what":"Exploring the S4 object","title":"Defining an mxFDA object","text":"Another useful function ?summary.mxFDA feeds summary() method. Either typing name object wrapping summary function provide information like number subjects, samples, spatial summary functions calculated, functional data analyses run.","code":"mxFDAobject #> mxFDA Object: #>  Subjects: 50 #>  Samples: 247 #>  Has spatial data #>  Univariate Summaries: None #>  Bivariate Summaries: Gcross #> FPCs not yet calculated #> MFPCs not yet calculated #> FCMs not yet calculated #> MFCMs not yet calculated #> Scalar on Functional Regression not calculated"},{"path":"/articles/mx_fda.html","id":"spatialtime","dir":"Articles","previous_headings":"","what":"SpatialTIME","title":"Defining an mxFDA object","text":"Sometimes summary functions normalizations run outside mxfda package end goal still run functional data analysis. packages, spatialTIME (Creed et al. (2021)) provide methods fast calculation functions spatstat permutation estimates complete spatial randomness robust theoretical CSR estimates, especially tissue samples holes violate assumption homogeneous point pattern (see C. Wilson et al. (2022)). Lets look perform estimation univariate nearest neighbor G spatialTIME. central object spatialTIME mIF object, contains list spatial data frames, data frame sample-level summaries, data frame metadata (‘clinical’). creating mxFDA object, spatial data frame clinical data, now convert something works spatialTIME. steps : convert positive/negative 1/0 integers identify columns spatial data frame cell types convert spatial data frame list, element unique sample create summary data frame spatial list number proportion positive cells phenotype spatial list, clinical, summary data mIF object can constructed. best computation efficiency, use >v1.3.4. Deriving spatial metrics mIF object really easy take time. 10 permutations estimate complete spatial randomness measure nearest neighbor G reduced sampling, 'rs', edge correction. make run faster, look cytotoxic T cells (CD8+) helper T cells (CD4+). spatialTIME, cell types (markers) added data frame. can visualize CD8+ CD4+ ggplot.  Exporting spatial summary function data mIF object accessing list object. However, need make sure data use mxFDA object contains single cell types results. make sure modeling aren’t mixing different cells. extraction filtering new univariate G results keeping cytotoxic T cell results. derived univariate nearest neighbor G CD8+, can added mxFDA object add_summary_function(). show , first create new mxFDA object empty spatial slot add new summary function results. Can now use mxfda plot method new data continue analyses done using internal extract_summary_function().","code":"#Step 1 spatialTIME_spatial_df = spatial %>%    select(-phenotype) %>%   mutate(across(phenotype_ck:phenotype_cd4, ~ ifelse(grepl(\"\\\\+\", .x), 1, 0))) %>%   relocate(patientImage_id, .before = 1)  #Step 2 cell_types = colnames(spatialTIME_spatial_df) %>% grep(\"phenotype\", ., value = TRUE)  #Step 3 spatial_list = split(spatialTIME_spatial_df, spatial$patientImage_id)  #Step 4 summary_data = lapply(spatial_list, function(df){   df %>%     #group by sample ID to maintain ID column     group_by(patient_id, patientImage_id) %>%     #find number of positive     reframe(across(!!cell_types, ~ sum(.x)),               `Total Cells` = n()) %>%     #calculate proportion     mutate(across(!!cell_types, ~.x/`Total Cells` * 100, .names = \"{.col} %\")) }) %>%   #bind the rows together   do.call(bind_rows, .) library(spatialTIME) #> spatialTIME version: #> 1.3.4.5 #> If using for publication, please cite our manuscript: #> https://doi.org/10.1093/bioinformatics/btab757  #make mif mif = create_mif(clinical_data = clinical,                  sample_data = summary_data,                  spatial_list = spatial_list[1:50],                  patient_id = \"patient_id\",                  sample_id = \"patientImage_id\") mif = NN_G(mif, mnames = cell_types[c(2, 6)],            r_range = 0:100, num_permutations = 10,             edge_correction = \"rs\", keep_perm_dis = FALSE,            workers = 1, overwrite = TRUE, xloc = \"x\", yloc = \"y\") mif$derived$univariate_NN %>%     ggplot() +     geom_line(aes(x = r, y = `Degree of Clustering Permutation`, color = patientImage_id), alpha = 0.4) +     facet_grid(~Marker) +   theme(legend.position = \"none\") #> Warning: Removed 1086 rows containing missing values or values outside the scale range #> (`geom_line()`). uni_g = mif$derived$univariate_NN %>%   filter(grepl(\"cd8\", Marker)) #make mxFDA object  mxFDA_spatialTIME = make_mxfda(metadata = clinical,                                spatial = NULL,                                subject_key = \"patient_id\",                                sample_key = \"patientImage_id\") #add summary data mxFDA_spatialTIME = add_summary_function(mxFDAobject,                                          summary_function_data = uni_g,                                          metric = \"uni g\") plot(mxFDA_spatialTIME, y = \"Degree of Clustering Permutation\", what = \"uni g\") #> Warning: Removed 480 rows containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":[]},{"path":"/articles/mx_fpca.html","id":"functional-data-notation","dir":"Articles","previous_headings":"","what":"Functional data notation","title":"Functional principal component analysis for spatial summary functions","text":"basic unit observation curve \\(X_i(r)\\) subjects \\(\\\\ldots, \\) cross-sectional setting \\(X_{ij}(r)\\) subject \\(\\) sample \\(j \\\\ldots, J_i\\) multilevel structure, occurs multiple samples subject. Methods functional data typically presented terms continuous functions, practice data observed discrete grid, \\(t\\). mxfda package, \\(X_{ij}(r)\\) spatial summary function (example, Ripley’s K) value radius \\(r\\) sample \\(j\\) subject \\(\\).","code":""},{"path":[]},{"path":"/articles/mx_fpca.html","id":"background-on-fpca","dir":"Articles","previous_headings":"Functional principal components analysis (FPCA)","what":"Background on FPCA","title":"Functional principal component analysis for spatial summary functions","text":"FPCA characterizes modes variability decomposing functional observations population level basis functions subject-specific scores. basis functions clear interpretation, analogous PCA: first basis function explains largest direction variation, subsequent basis function describes less. FPCA model typically written \\[ X_i(r) = \\mu(r) + \\sum_{k=1}^{K} c_{ik}\\psi_{k}(r) + \\epsilon_i(r) \\] \\(\\mu(r)\\) population mean, \\(\\psi_{k}(r)\\) set orthonormal population-level functional principal components, \\(c_{ik}\\) subject-specific scores mean zero variance \\(\\lambda_k\\), \\(\\epsilon_i(r)\\) residual curves. Estimated functional principal components \\(\\widehat{\\psi}_1(r), \\widehat{\\psi}_2(r), \\ldots, \\widehat{\\psi}_{K}(r)\\) corresponding variances \\(\\widehat{\\lambda}_1 \\geq \\widehat{\\lambda}_2 \\geq \\ldots \\geq \\widehat{\\lambda}_K\\) obtained truncated Karhunen-Lo`eve decomposition sample covariance \\(\\widehat{\\Sigma}(s,t) = \\widehat{\\mbox{Cov}}(Y_i(s), X_i(r))\\). truncation lag \\(K\\) often chosen resulting approximation accounts least 95% observed variance (Wrobel et al. (2016)). Conceptually, functional principal components can thought patterns data explain variance, scores \\(c_{ik}\\) weights describe much functional principal component contributes shape given subject’s spatial summary function.","code":""},{"path":[]},{"path":"/articles/mx_fpca.html","id":"load-and-visualize-data","dir":"Articles","previous_headings":"Functional principal components analysis (FPCA) > Implementing FPCA","what":"Load and visualize data","title":"Functional principal component analysis for spatial summary functions","text":"load data VectraPolarisData ovarian cancer dataset, contains tumor microarray data 128 women high-grade serous ovarian cancer, univariate nearest-neighbor G-functions immune cells already extracted. data modified, original data experiment described Steinhart et al. (2021). subject one image. functions visualized .  Values dotted red line interpreted higher probability observing neighboring immune cell radius \\(r\\) expected complete spatial randomness (CSR). Conversely, values dotted line exhibit lower probability observing neighboring immune cell expected CSR.","code":"data(\"ovarian_FDA\") ovarian_FDA #> mxFDA Object: #>  Subjects: 128 #>  Samples: 128 #>  Has spatial data #>  Univariate Summaries: Gest #>  Bivariate Summaries: None #> FPCs not yet calculated #> MFPCs not yet calculated #> FCMs not yet calculated #> MFCMs not yet calculated #> Scalar on Functional Regression not calculated plot(ovarian_FDA, y = \"fundiff\", what = \"uni g\", sampleID = \"patient_id\") +   geom_hline(yintercept = 0, color = \"red\", linetype = 2) +   theme_minimal()"},{"path":"/articles/mx_fpca.html","id":"run-and-visualize-fpca","dir":"Articles","previous_headings":"Functional principal components analysis (FPCA) > Implementing FPCA","what":"Run and visualize FPCA","title":"Functional principal component analysis for spatial summary functions","text":"run FPCA G-function curves, using run_fpca() function, store results mxFDAobject called ovarian_FDA. argument metric used specify spatial summary function estimate FPCA - case \"uni g\" specifies univariate G function, r denotes variable specifies radius, value denotes value values spatial summary function. argument pve takes number 0 1, specifies percent variance explained FPCA decomposition. example, pve = 0.98 selected, resulting FPCA return number FPCs explain 98% variance data. Note summary object now shows number functional principal components (FPCs) calculated: FPCA results stored functional_pca slot ovarian_FDA object. access slot directly view extracted summary functions, type: can visualize results FPCA using plot() function (see ?plot.mxFDA details). output plot() ggplot2 object can easily added /manipulated ggplot plot . plot first two functional principal components FPCA analysis G summary functions.  plots show \\(\\hat{\\mu}(r)\\pm \\sqrt{\\hat{\\lambda}_1\\hat{\\psi_k}(t)}\\) first second FPC. black line plot mean data- shows peak probability observing neighboring immune cell occurs, average, radius \\(r = 12\\). plots, blue red lines represent one standard deviation FPC added (blue) subtracted (red) population mean. example plot FPC 1, can interpret pattern FPC shift population mean. Subjects high score, \\(c_{i1}\\) FPC 1 , across radii, larger probability observing neighboring immune cell average dataset. pattern explains 76.2% variance data. can explore results FPCA interactively using {refund.shiny} package Wrobel et al. (2016). Execute code launch Shiny app interactive plots.","code":"ovarian_FDA <- run_fpca(ovarian_FDA,                          metric = \"uni g\",                          r = \"r\",                          value = \"fundiff\",                         pve = .95) #> 128 sample have >= 4 values for FPCA; removing 0 samples summary(ovarian_FDA) #> mxFDA Object: #>  Subjects: 128 #>  Samples: 128 #>  Has spatial data #>  Univariate Summaries: Gest #>  Bivariate Summaries: None #> FPCs Calculated: #>  Gest: 4 FPCs describe 96.9% variance #> MFPCs not yet calculated #> FCMs not yet calculated #> MFCMs not yet calculated #> Scalar on Functional Regression not calculated ovarian_FDA@functional_pca p1 = plot(ovarian_FDA, what = 'uni g fpca', pc_choice = 1) p2 = plot(ovarian_FDA, what = 'uni g fpca', pc_choice = 2)  ggarrange(p1, p2, nrow = 1, ncol = 2) G_fpca = extract_fpca_object(ovarian_FDA,                              what = \"uni g fpca\")  library(refund.shiny) plot_shiny(G_fpca)"},{"path":[]},{"path":"/articles/mx_fpca.html","id":"mfpca-background","dir":"Articles","previous_headings":"Multilevel functional principal components analysis (MFPCA)","what":"MFPCA Background","title":"Functional principal component analysis for spatial summary functions","text":"Multilevel functional principal components analysis (MFPCA) extends ideas FPCA functional data multilevel structure. case multiplex imaging data, structure arises multiple samples ROIs subject. MFPCA models within-subject correlation induced repeated measures well -subject correlation modeled classic FPCA. leads two-level FPC decomposition, level 1 concerns subject-specific effects level 2 concerns sample-specific effects. Population-level basis functions subject-specific scores calculated levels (Di et al. (2009), Cui et al. (2023)). MFPCA model : \\[ X_{ij}(r) = \\mu(r)  + \\sum_{k_1=1}^{K_1}    c_{ik}^{(1)}\\psi_{k}^{(1)}(r) + \\sum_{k_2=1}^{K_2}c^{(2)}_{ijk}\\psi_{k}^{(2)}(r) + \\epsilon_{ij}(r) \\] \\(\\mu(r)\\) population mean, \\(\\psi_{k}^{(1)}(r)\\) \\(\\psi_{k}^{(2)}(r)\\) functional principal components levels 1 2, respectively, \\(c_{ik}^{(1)}\\) \\(c^{(2)}_{ijk}\\) subject-specific subject-sample-specific scores. \\(K_1\\) \\(K_2\\) represent number FPCs levels 1 2, respectively.","code":""},{"path":"/articles/mx_fpca.html","id":"implementing-mfpca","dir":"Articles","previous_headings":"Multilevel functional principal components analysis (MFPCA)","what":"Implementing MFPCA","title":"Functional principal component analysis for spatial summary functions","text":"MFPCA use non-small cell lung carcinoma data, since need multiple samples per subject. extract univariate K functions lung data. K-functions visualized .","code":"data(lung_df)  clinical = lung_df %>%   select(image_id, patient_id, patientImage_id, gender, age, survival_days, survival_status, stage) %>%   distinct()  spatial = lung_df %>%   select(-image_id, -gender, -age, -survival_days, -survival_status, -stage)  mxFDAobject = make_mxfda(metadata = clinical,                          spatial = spatial,                          subject_key = \"patient_id\",                          sample_key = \"patientImage_id\"                          )  mxFDAobject = extract_summary_functions(mxFDAobject,                                          extract_func = univariate,                                         summary_func = Kest,                                         r_vec = seq(0, 100, by = 1),                                         edge_correction = \"iso\",                                         markvar = \"immune\",                                         mark1 = \"immune\") plot(mxFDAobject, y = \"fundiff\", what = \"uni k\", sampleID = \"patientImage_id\") +   geom_hline(yintercept = 0, color = \"red\", linetype = 2) #> Warning: Removed 48 rows containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"/articles/mx_fpca.html","id":"run-and-visualize-mfpca","dir":"Articles","previous_headings":"Multilevel functional principal components analysis (MFPCA) > Implementing MFPCA","what":"Run and visualize MFPCA","title":"Functional principal component analysis for spatial summary functions","text":"run MFPCA K-function curves, using run_mfpca() function, store results mxFDAobject lung cancer data object. arguments run_fpca() function. summary object see 2 level 1 FPCs 2 level 2 FPCs calculated. can also visualize results MFPCA using plot() function (see ?plot.mxFDA details). plot first FPC level 1 first FPC level 2.  left plot shows \\(\\hat{\\mu}(r)\\pm \\sqrt{\\hat{\\lambda}_1^{(1)}}\\hat{\\psi_1}^{(1)}(t)\\), indicates first level 1 FPC explains essentially shift population mean. Subjects high score, \\(c_{i1}\\) FPC 1 , across radii, spatial clustering immune cells average dataset. right plot shows \\(\\hat{\\mu}(r)\\pm \\sqrt{\\hat{\\lambda}_1^{(2)}}\\hat{\\psi}_1^{(2)}(t)\\). plot shows pattern explained FPC 1 level 2. Essentially, main pattern variation explain differences across samples within given subjects shows within subject, differences primarily driven images higher overall K-function values lower.","code":"mxFDAobject <- run_mfpca(mxFDAobject,                           metric = \"uni k\",                           r = \"r\",                           value = \"fundiff\",                          pve = .99) #> 246 sample have >= 4 values for FPCA; removing 1 samples #> Joining with `by = join_by(patient_id)`  mxFDAobject #> mxFDA Object: #>  Subjects: 50 #>  Samples: 247 #>  Has spatial data #>  Univariate Summaries: Kest #>  Bivariate Summaries: None #> FPCs not yet calculated #> MFPCs Calculated: #>  Kest: 1 Level1 MFPCs and 3 Level2 MFPCs explain 99.6% variance #> FCMs not yet calculated #> MFCMs not yet calculated #> Scalar on Functional Regression not calculated p = plot(mxFDAobject, what = 'uni k mfpca', level1 = 1, level2 = 1)  ggarrange(plotlist = p, nrow = 1, ncol = 2)"},{"path":[]},{"path":"/articles/mx_funreg.html","id":"ovarian-cancer-multiplex-imaging-data","dir":"Articles","previous_headings":"","what":"Ovarian cancer multiplex imaging data","title":"Functional regression with spatial summary functions as covariates","text":"load data Ovarian cancer dataset univariate nearest-neighbor G-functions immune cells already estimated. See vignette mxfda::mx_fda details extracting spatial summary functions. visualize functions .","code":"data(\"ovarian_FDA\") plot(ovarian_FDA, y = \"fundiff\", what = \"uni g\") +   geom_hline(yintercept = 0, color = \"red\", linetype = 2) +   theme_minimal() +   ggtitle(\"Nearest neighbor G-functions for immune cells\")"},{"path":"/articles/mx_funreg.html","id":"functional-regression-models-for-survival-outcomes","dir":"Articles","previous_headings":"","what":"Functional regression models for survival outcomes","title":"Functional regression with spatial summary functions as covariates","text":"Single-cell imaging common cancer applications, analysis goal relate cell-level spatial information patient-level time--event outcomes like overall survival time--recurrence. Cox regression popular regression technique assessing association covariates survival outcome. standard Cox model given \\[\\log h_i(t) = \\log h_0(t) + \\sum_{p = 1}^P \\gamma_p Z_{ip},\\] \\(h_i(t)\\) hazard rate subject \\(\\) \\(h_0(t)\\) unspecified baseline hazard. \\(Z_{ip}\\) scalar covariate, \\(P\\) total number scalar covariates. covariates like age, sex, treatment group, etc can contrasted spatial summary functions known functional covariates. \\(\\gamma_p\\) regression coefficients; interpreted log hazard ratios. single cell spatial data, spatial summary function subject (e.g. univariate Ripley’s K), \\(X_i(r)\\), want add Cox regression model functional covariate. provide three different strategies incorporating \\(X_i(r)\\) Cox regression model covariate.","code":""},{"path":"/articles/mx_funreg.html","id":"cox-regression-using-functional-principal-components-as-covariates","dir":"Articles","previous_headings":"Functional regression models for survival outcomes","what":"Cox regression using functional principal components as covariates","title":"Functional regression with spatial summary functions as covariates","text":"approach, first decompose spatial summary functions using FPCA, use subject-specific scores FPCA covariates Cox regression model. Conceptually, fitting model given \\[\\log h_i(t) = \\log h_0(t) + \\sum_{p = 1}^P \\gamma_p Z_{ip} + \\sum_{k = 1}^K \\beta_k c_{ik},\\] \\(c_{ik}\\) \\(k\\)th score functional principal components analysis \\(\\)th subject. \\(K\\) represents number principal components, usually selected explain least 95% variance spatial summary functions (see vignette(\"mx_fpca\")). \\(\\beta_k\\) regression coefficients tell us association overall survival \\(k\\)th functional principal component. Like \\(\\gamma_p\\), \\(\\beta_k\\) interpreted log hazard ratios, \\(e^{\\beta_k}\\) hazard ratio. approach Cox regression spatial summary functions covariates taken Vu et al. (2023). code runs FPCA G-functions ovarian cancer data calculates principal components explain 99% variance using argument pve. argument lightweight = TRUE returns needed downstream analysis. return items calculate FPCA using refund::fpca.face, use lightweight = FALSE. Six FPCs returned. , extract fpca scores ovarian_FDA object visualize relationship first two FPC scores survival time.  appears subjects lower scores FPC 1 tended longer survival times. Next, use scores covariates Cox regression model. also control age. results model printed tidy format. Note FPCs except FPC 2 statistically significant relationship overall survival. hazard ratio 1 FPC 1 indicates higher scores associate worse survival outcomes, consistent exploratory analysis plot .","code":"ovarian_FDA <- run_fpca(ovarian_FDA, metric = \"uni g\", r = \"r\", value = \"fundiff\",                         lightweight = TRUE,                         pve = .99) ovarian_FDA #> mxFDA Object: #>  Subjects: 128 #>  Samples: 128 #>  Has spatial data #>  Univariate Summaries: Gest #>  Bivariate Summaries: None #> FPCs Calculated: #>  Gest: 6 FPCs describe 99.2% variance #> MFPCs not yet calculated #> FCMs not yet calculated #> MFCMs not yet calculated #> Scalar on Functional Regression not calculated Gdf_fpc = extract_fpca_scores(ovarian_FDA, 'uni g fpca')  p1 = Gdf_fpc %>%   mutate(event = factor(event, levels = 0:1, labels = c(\"censored\", \"died\"))) %>%   ggplot(aes(fpc1, survival_time, color = event)) +   geom_point() +    labs(y = \"survival time (days)\", title = \"fpc1\") +   theme(legend.position = c(.5, .7))  p2 = Gdf_fpc %>%   mutate(event = factor(event, levels = 0:1, labels = c(\"censored\", \"died\"))) %>%   ggplot(aes(fpc2, survival_time, color = event)) +   geom_point() +    labs(y = \"survival time (days)\", title = \"fpc2\") +   theme(legend.position = \"none\")   ggarrange(p1, p2, nrow = 1, ncol = 2) library(survival) phmod_fpc = coxph(Surv(survival_time, event) ~ fpc1 + fpc2 + fpc3 + fpc4 + age,                data = Gdf_fpc) tidy(phmod_fpc, exp = TRUE, conf.int = TRUE) %>%   mutate(p.value = format.pval(p.value, digits = 1)) %>%   select(term, hazard_ratio = estimate, conf.low, conf.high, p = p.value) %>%   knitr::kable(digits = 2)"},{"path":"/articles/mx_funreg.html","id":"linear-and-additive-functional-cox-regression-models","dir":"Articles","previous_headings":"Functional regression models for survival outcomes","what":"Linear and additive functional Cox regression models","title":"Functional regression with spatial summary functions as covariates","text":"Linear additive functional Cox regression models used Vu et al. (2022) model relationship survival spatial summary functions without first decompose spatial summary functions using FPCA. Linear functional cox regression first introduced Gellar et al. (2015) takes form: \\[\\log h_i(t;Z_i, X_i) = \\log h_0(t) + \\sum_{p = 1}^P \\gamma_p Z_{ip} + \\int_{r = 0}^R \\beta(r)X_i(r)dr,\\] \\(X_i(r)\\) spatial summary function subject \\(\\), \\(\\beta(r)\\) coefficient function. model, coefficient function log hazard ratio spatial summary function radius \\(r\\). effect, allows us model association spatial clustering survival many different radii simultaneously. \\(X_i(r)\\) considered functional covariate, \\(Z_{ip}\\) scalar covariates.","code":""},{"path":"/articles/mx_funreg.html","id":"linear-functional-cox-model-lfcm","dir":"Articles","previous_headings":"Functional regression models for survival outcomes > Linear and additive functional Cox regression models","what":"Linear functional Cox model (LFCM)","title":"Functional regression with spatial summary functions as covariates","text":"code runs LFCM G-functions ovarian cancer data age scalar covariate. Setting argument afcm = FALSE runs LFCM instead AFCM. print class summary extracted model. Finally, visualized estimated coefficient function, \\(\\hat{\\beta}(r)\\), model. code extracts quantity, plots \\(\\hat{\\beta}(r)\\) solid black line 95% pointwise confidence intervals dotted black lines. Values radius \\(r\\) 95% confidence interval contain zero statistically significant.","code":"ovarian_FDA = run_fcm(ovarian_FDA, model_name = \"fit_lfcm\",                       formula = survival_time ~ age, event = \"event\",                       metric = \"uni g\", r = \"r\", value = \"fundiff\",                       afcm = FALSE) class(extract_model(ovarian_FDA, 'uni g', 'cox', 'fit_lfcm')) #> [1] \"lfcm\" \"gam\"  \"glm\"  \"lm\" summary(extract_model(ovarian_FDA, 'uni g', 'cox', 'fit_lfcm')) #>  #> Family: Cox PH  #> Link function: identity  #>  #> Formula: #> survival_time ~ age + s(t_int, by = l_int * func, bs = \"cr\",  #>     k = 20) #>  #> Parametric coefficients: #>     Estimate Std. Error z value Pr(>|z|)    #> age  0.03083    0.01136   2.714  0.00664 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                         edf Ref.df Chi.sq  p-value     #> s(t_int):l_int * func 4.286  4.759  41.02 4.76e-07 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Deviance explained = 5.72% #> -REML = 314.14  Scale est. = 1         n = 128 lfcm_surface = extract_surface(ovarian_FDA, metric = \"uni g\", model = \"fit_lfcm\", analysis_vars = c(\"age\"))  plot(lfcm_surface)"},{"path":"/articles/mx_funreg.html","id":"additive-functional-cox-model-afcm","dir":"Articles","previous_headings":"Functional regression models for survival outcomes > Linear and additive functional Cox regression models","what":"Additive functional Cox model (AFCM)","title":"Functional regression with spatial summary functions as covariates","text":"Additive functional cox regression first introduced Cui, Crainiceanu, Leroux (2021) takes form: \\[\\log h_i(t;Z_i, X_i) = \\log h_0(t) + \\sum_{p = 1}^P \\gamma_p Z_{ip} + \\int_{r = 0}^R F\\left(r, X_i(r)\\right)dr.\\] model slightly flexible LFCM, allows relationship \\(X_i(r)\\) survival vary nonlinearly \\(r\\). code runs AFCM age scalar covariate. Setting argument afcm = TRUE runs AFCM. AFCM model produces coefficient surface, \\(\\hat{F}\\left(r, X_i(r)\\right)\\), rather coefficient function. code extracts estimated surface, left plots surface, right plots regions surface statistically significant 95% confidence level.","code":"ovarian_FDA <- run_fcm(ovarian_FDA, model_name = \"fit_afcm\",                         formula = survival_time ~ age, event = \"event\",                        metric = \"uni g\", r = \"r\", value = \"fundiff\",                        afcm = TRUE) class(extract_model(ovarian_FDA, 'uni g', 'cox', 'fit_afcm')) #> [1] \"afcm\" \"gam\"  \"glm\"  \"lm\" summary(extract_model(ovarian_FDA, 'uni g', 'cox', 'fit_afcm')) #>  #> Family: Cox PH  #> Link function: identity  #>  #> Formula: #> survival_time ~ age + ti(t_int, func, by = l_int, bs = c(\"cr\",  #>     \"cr\"), k = c(10, 10), mc = c(FALSE, TRUE)) #>  #> Parametric coefficients: #>     Estimate Std. Error z value Pr(>|z|)   #> age  0.02852    0.01162   2.454   0.0141 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Approximate significance of smooth terms: #>                        edf Ref.df Chi.sq p-value     #> ti(t_int,func):l_int 8.248  10.52  55.88  <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Deviance explained = 10.7% #> -REML = 310.05  Scale est. = 1         n = 128 afcm_surface = extract_surface(ovarian_FDA, metric = \"uni g\", model = \"fit_afcm\", analysis_vars = c(\"age\"), p = 0.05) plot(afcm_surface)"},{"path":"/articles/mx_funreg.html","id":"model-summaries-and-c-index","dir":"Articles","previous_headings":"Functional regression models for survival outcomes","what":"Model summaries and C-index","title":"Functional regression with spatial summary functions as covariates","text":"C-index good way compare across models, especially incorporating cross validation. Larger c-index indicative better predictive model. , calculate c-index model.","code":"fit_afcm = extract_model(ovarian_FDA, 'uni g', 'cox', 'fit_afcm') fit_lfcm = extract_model(ovarian_FDA, 'uni g', 'cox', 'fit_lfcm')  c_index = c(   phmod_fpc$concordance[[\"concordance\"]],    extract_c(fit_lfcm, Gdf_fpc$survival_time, Gdf_fpc$event),   extract_c(fit_afcm, Gdf_fpc$survival_time, Gdf_fpc$event) )  tibble(model = c(\"fpc\", \"lfcm\", \"afcm\"), c_index) %>%   knitr::kable(digits = 2)"},{"path":"/articles/mx_funreg.html","id":"functional-regression-models-for-binary-and-continuous-outcomes","dir":"Articles","previous_headings":"","what":"Functional regression models for binary and continuous outcomes","title":"Functional regression with spatial summary functions as covariates","text":"Models continuous binary scalar outcomes functional covariates also possible, referred scalar--function regression (sofr) models functional data analysis literature (Goldsmith et al. (2011)).","code":""},{"path":"/articles/mx_funreg.html","id":"continuous-outcome","dir":"Articles","previous_headings":"Functional regression models for binary and continuous outcomes","what":"Continuous outcome","title":"Functional regression with spatial summary functions as covariates","text":"fit sofr model age outcome, G-functions ovarian cancer data functional covariate, additional scalar covariates using run_sofr() function. model also produces estimated coefficient surface \\(\\hat{\\beta}(r)\\), can visualized. code extracts quantity, plots \\(\\hat{\\beta}(r)\\) solid black line 95% pointwise confidence intervals dotted black lines. Values radius \\(r\\) 95% confidence interval contain zero statistically significant. radius value \\(r\\), continuous outcome \\(\\hat{\\beta}(r)\\) can interpreted regular linear regression coefficient.","code":"ovarian_FDA <- run_sofr(ovarian_FDA,                          model_name = \"fit_sofr_age\",                          formula = age ~ 1,                          metric = \"uni g\", r = \"r\", value = \"fundiff\") model = extract_model(ovarian_FDA, 'uni g', type = 'sofr', model_name = 'fit_sofr_age') plot(model, ylab=expression(paste(beta(t))), xlab=\"t\")"},{"path":"/articles/mx_funreg.html","id":"binary-outcome","dir":"Articles","previous_headings":"Functional regression models for binary and continuous outcomes","what":"Binary outcome","title":"Functional regression with spatial summary functions as covariates","text":"fit sofr model stage outcome, G-functions ovarian cancer data functional covariate, age scalar covariate. Stage binary outcome, result model can also called functional logistic regression. outcome binary, need specify argument family = \"binomial\". addition, outcome coded numeric rather factor character variable. outcome binary \\(\\hat{\\beta}(r)\\) interpreted log odds ratio radius \\(r\\).","code":"ovarian_FDA <- run_sofr(ovarian_FDA,                          model_name = \"fit_sofr_stage\",                          formula = stage ~ age,                          family = \"binomial\",                         metric = \"uni g\", r = \"r\", value = \"fundiff\") model = extract_model(ovarian_FDA, 'uni g', type = 'sofr', model_name = 'fit_sofr_stage') plot(model, ylab=expression(paste(beta(t))), xlab=\"t\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julia Wrobel. Author. Alex Soupir. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wrobel J, Soupir (2024). mxfda: Functional Data Analysis Package Spatial Single Cell Data. R package version 0.2.1-1, http://juliawrobel.com/mxfda/, https://github.com/julia-wrobel/mxfda/.","code":"@Manual{,   title = {mxfda: A Functional Data Analysis Package for Spatial Single Cell Data},   author = {Julia Wrobel and Alex Soupir},   year = {2024},   note = {R package version 0.2.1-1, http://juliawrobel.com/mxfda/},   url = {https://github.com/julia-wrobel/mxfda/}, }"},{"path":[]},{"path":"/index.html","id":"mxfda","dir":"","previous_headings":"","what":"mxFDA","title":"A Functional Data Analysis Package for Spatial Single Cell Data","text":"functional data analysis package spatial point pattern data.","code":""},{"path":"/index.html","id":"installing-mxfda-to-r","dir":"","previous_headings":"","what":"Installing mxFDA to R","title":"A Functional Data Analysis Package for Spatial Single Cell Data","text":"install, devtools remotes package required install_github() function: install specific release mxfda, use devtools syntax. example installing first release mxfda:","code":"#install devtools if not available if (!require(\"devtools\", quietly = TRUE))   install.packages(\"devtools\")  #install from github devtools::install_github(\"julia-wrobel/mxfda\") devtools::install_github('julia-wrobel/mxfda@v0.2.1')"},{"path":"/index.html","id":"vignettes-and-function-references","dir":"","previous_headings":"","what":"Vignettes and Function References","title":"A Functional Data Analysis Package for Spatial Single Cell Data","text":"interested documentation -’s, please see http://juliawrobel.com/mxfda/","code":""},{"path":"/index.html","id":"github-code","dir":"","previous_headings":"","what":"GitHub Code","title":"A Functional Data Analysis Package for Spatial Single Cell Data","text":"raw code can found GitHub page clicking GitHub symbol upper right pkgdown site https://github.com/julia-wrobel/mxfda","code":""},{"path":"/reference/Gcross.html","id":null,"dir":"Reference","previous_headings":"","what":"Gcross — Gcross","title":"Gcross — Gcross","text":"See spatstat.explore::Gcross()","code":""},{"path":"/reference/Gcross.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gcross — Gcross","text":"object class \"fv\" columns radii, theoretical bivariate G, columns edge corrections.","code":""},{"path":"/reference/Gest.html","id":null,"dir":"Reference","previous_headings":"","what":"Gest — Gest","title":"Gest — Gest","text":"See spatstat.explore::Gest()","code":""},{"path":"/reference/Gest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gest — Gest","text":"object class \"fv\" columns radii, theoretical G, columns edge corrections.","code":""},{"path":"/reference/Kcross.html","id":null,"dir":"Reference","previous_headings":"","what":"Kcross — Kcross","title":"Kcross — Kcross","text":"See spatstat.explore::Kcross()","code":""},{"path":"/reference/Kcross.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kcross — Kcross","text":"object class \"fv\" columns radii, theoretical bivariate K, columns edge corrections.","code":""},{"path":"/reference/Kest.html","id":null,"dir":"Reference","previous_headings":"","what":"Kest — Kest","title":"Kest — Kest","text":"See spatstat.explore::Kest()","code":""},{"path":"/reference/Kest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kest — Kest","text":"object class \"fv\" columns radii, theoretical K, columns edge corrections.","code":""},{"path":"/reference/Lcross.html","id":null,"dir":"Reference","previous_headings":"","what":"Lcross — Lcross","title":"Lcross — Lcross","text":"See spatstat.explore::Lcross()","code":""},{"path":"/reference/Lcross.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lcross — Lcross","text":"object class \"fv\" columns radii, theoretical bivariate L, columns edge corrections.","code":""},{"path":"/reference/Lest.html","id":null,"dir":"Reference","previous_headings":"","what":"Lest — Lest","title":"Lest — Lest","text":"See spatstat.explore::Lest()","code":""},{"path":"/reference/Lest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lest — Lest","text":"object class \"fv\" columns radii, theoretical L, columns edge corrections.","code":""},{"path":"/reference/add_summary_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Summary Function — add_summary_function","title":"Add Summary Function — add_summary_function","text":"Sometimes ways calculating summary functions wanted done packages, instance data can loaded mxFDA object.","code":""},{"path":"/reference/add_summary_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Summary Function — add_summary_function","text":"","code":"add_summary_function(mxFDAobject, summary_function_data, metric)"},{"path":"/reference/add_summary_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Summary Function — add_summary_function","text":"mxFDAobject object class mxFDA summary_function_data data frame summary_key mxFDA object key column summary function metric character vector either 'uni' 'bi' 'k', 'l', 'g'; e.g. 'uni g'","code":""},{"path":"/reference/add_summary_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Summary Function — add_summary_function","text":"updated mxFDA object derived value added. See make_mxfda() details.","code":""},{"path":"/reference/add_summary_function.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add Summary Function — add_summary_function","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"bivariate — bivariate","title":"bivariate — bivariate","text":"Internal function called extract_summary_functions calculate bivariate spatial summary function single image.","code":""},{"path":"/reference/bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bivariate — bivariate","text":"","code":"bivariate(   mximg,   markvar,   mark1,   mark2,   r_vec,   func = c(Kcross, Lcross, Gcross, entropy),   edge_correction,   breaks = NULL )"},{"path":"/reference/bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bivariate — bivariate","text":"mximg Dataframe cell-level multiplex imaging data single image. variables x y denote x y spatial locations cell. markvar name variable denotes cell type(s) interest. Character. mark1 Character string denotes first cell type interest. mark2 Character string denotes second cell type interest. r_vec Numeric vector radii evaluate spatial summary functions. Must begin 0. func Spatial summary function calculate. Options c(Kcross, Lcross, Gcross) denote Ripley's K, Besag's L, nearest neighbor G function, respectively, entropy Vu et al, 2023. edge_correction Character string denotes edge correction method spatial summary function. Kcross Lcross choose one c(\"border\", \"isotropic\", \"Ripley\", \"translate\", \"none\"). Gcross choose one c(\"rs\", \"km\", \"han\") breaks integer number breaks used entropy","code":""},{"path":"/reference/bivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"bivariate — bivariate","text":"data.frame containing: r radius values spatial summary function evaluated sumfun values spatial summary function csr values spatial summary function complete spatial randomness fundiff sumfun - csr, positive values indicate clustering negative values repulsion","code":""},{"path":[]},{"path":"/reference/bivariate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"bivariate — bivariate","text":"Xiao, L., Ruppert, D., Zipunnikov, V., Crainiceanu, C. (2016). Fast covariance estimation high-dimensional functional data. Statistics Computing, 26, 409-421. DOI: 10.1007/s11222-014-9485-x. Vu, T., Seal, S., Ghosh, T., Ahmadian, M., Wrobel, J., & Ghosh, D. (2023). FunSpace: functional spatial analytic approach cell imaging data using entropy measures. PLOS Computational Biology, 19(9), e1011490.","code":""},{"path":"/reference/bivariate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bivariate — bivariate","text":"Julia Wrobel julia.wrobel@emory.edu","code":""},{"path":"/reference/entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Entropy — entropy","title":"Entropy — entropy","text":"Entropy","code":""},{"path":"/reference/entropy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Entropy — entropy","text":"","code":"entropy(X, i, j, r_vec, correction)"},{"path":"/reference/entropy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Entropy — entropy","text":"X object class ppp spatstat 2 marks ignored j ignored r_vec vector length wanted breaks (rescaled) max value max measuring entropy correction ignored","code":""},{"path":"/reference/entropy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Entropy — entropy","text":"data frame entropy calculated length(r_vec) bins within 0 max(r_vec)","code":""},{"path":[]},{"path":"/reference/entropy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Entropy — entropy","text":"Vu, T., Seal, S., Ghosh, T., Ahmadian, M., Wrobel, J., & Ghosh, D. (2023). FunSpace: functional spatial analytic approach cell imaging data using entropy measures. PLOS Computational Biology, 19(9), e1011490. Altieri, L., Cocchi, D., & Roli, G. (2018). new approach spatial entropy measures. Environmental ecological statistics, 25, 95-110.","code":""},{"path":"/reference/entropy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Entropy — entropy","text":"Thao Vu thao.3.vu@cuanschutz.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_bivariate — extract_bivariate","title":"extract_bivariate — extract_bivariate","text":"Internal function called extract_summary_functions calculate bivariate spatial summary function single image.","code":""},{"path":"/reference/extract_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_bivariate — extract_bivariate","text":"","code":"extract_bivariate(   mximg,   markvar,   mark1,   mark2,   r_vec,   func = c(Kcross, Lcross, Gcross, entropy),   edge_correction,   breaks = NULL )"},{"path":"/reference/extract_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_bivariate — extract_bivariate","text":"mximg Dataframe cell-level multiplex imaging data single image. variables x y denote x y spatial locations cell. markvar name variable denotes cell type(s) interest. Character. mark1 Character string denotes first cell type interest. mark2 Character string denotes second cell type interest. r_vec Numeric vector radii evaluate spatial summary functions. Must begin 0. func Spatial summary function calculate. Options c(Kcross, Lcross, Gcross) denote Ripley's K, Besag's L, nearest neighbor G function, respectively, entropy Vu et al, 2023. edge_correction Character string denotes edge correction method spatial summary function. Kcross Lcross choose one c(\"border\", \"isotropic\", \"Ripley\", \"translate\", \"none\"). Gcross choose one c(\"rs\", \"km\", \"han\") breaks integer number breaks used entropy","code":""},{"path":"/reference/extract_bivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_bivariate — extract_bivariate","text":"data.frame containing: r radius values spatial summary function evaluated sumfun values spatial summary function csr values spatial summary function complete spatial randomness fundiff sumfun - csr, positive values indicate clustering negative values repulsion","code":""},{"path":[]},{"path":"/reference/extract_bivariate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"extract_bivariate — extract_bivariate","text":"Xiao, L., Ruppert, D., Zipunnikov, V., Crainiceanu, C. (2016). Fast covariance estimation high-dimensional functional data. Statistics Computing, 26, 409-421. DOI: 10.1007/s11222-014-9485-x. Vu, T., Seal, S., Ghosh, T., Ahmadian, M., Wrobel, J., & Ghosh, D. (2023). FunSpace: functional spatial analytic approach cell imaging data using entropy measures. PLOS Computational Biology, 19(9), e1011490.","code":""},{"path":"/reference/extract_bivariate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_bivariate — extract_bivariate","text":"Julia Wrobel julia.wrobel@emory.edu","code":""},{"path":"/reference/extract_c.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_c — extract_c","title":"extract_c — extract_c","text":"Function calculate c-index AFCM LFCM fit","code":""},{"path":"/reference/extract_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_c — extract_c","text":"","code":"extract_c(fit, survival_time, event)"},{"path":"/reference/extract_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_c — extract_c","text":"fit fit AFCM LFCM model fit object. survival_time Vector survival/censoring times event Survival statust (0 = censored, 1 = event)","code":""},{"path":"/reference/extract_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_c — extract_c","text":"c-index","code":""},{"path":"/reference/extract_c.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_c — extract_c","text":"Erjia Cui","code":""},{"path":"/reference/extract_fpca_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract FPCA object — extract_fpca_object","title":"Extract FPCA object — extract_fpca_object","text":"Function extracts FPCA object created either run_fpca() run_mfpca() mxFDA object","code":""},{"path":"/reference/extract_fpca_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract FPCA object — extract_fpca_object","text":"","code":"extract_fpca_object(mxFDAobject, what)"},{"path":"/reference/extract_fpca_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract FPCA object — extract_fpca_object","text":"mxFDAobject object class mxFDA functional PCA data extract, e.g. 'uni k'","code":""},{"path":"/reference/extract_fpca_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract FPCA object — extract_fpca_object","text":"fpca object created run_fcm()","code":""},{"path":"/reference/extract_fpca_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract FPCA object — extract_fpca_object","text":"Output object can visualized refund.shiny::plot_shiny()","code":""},{"path":"/reference/extract_fpca_object.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract FPCA object — extract_fpca_object","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_fpca_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract FPCA object — extract_fpca_object","text":"","code":"#load ovarian mxFDA object data('ovarian_FDA')  #run the FPCA ovarian_FDA = run_fpca(ovarian_FDA, metric = \"uni g\", r = \"r\", value = \"fundiff\",                        lightweight = TRUE,                        pve = .99) #> 128 sample have >= 4 values for FPCA; removing 0 samples  #extract the fpca object obj = extract_fpca_object(ovarian_FDA, \"uni g fpca\")"},{"path":"/reference/extract_fpca_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract FPCA scores — extract_fpca_scores","title":"Extract FPCA scores — extract_fpca_scores","text":"Extract FPCA scores","code":""},{"path":"/reference/extract_fpca_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract FPCA scores — extract_fpca_scores","text":"","code":"extract_fpca_scores(mxFDAobject, what)"},{"path":"/reference/extract_fpca_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract FPCA scores — extract_fpca_scores","text":"mxFDAobject object class mxFDA functional PCA data extract, e.g. 'uni k'","code":""},{"path":"/reference/extract_fpca_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract FPCA scores — extract_fpca_scores","text":"fpca object","code":""},{"path":[]},{"path":"/reference/extract_fpca_scores.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract FPCA scores — extract_fpca_scores","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_fpca_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract FPCA scores — extract_fpca_scores","text":"","code":"#load ovarian mxFDA object data('ovarian_FDA')  #run ghe lfcm model ovarian_FDA = run_fpca(ovarian_FDA, metric = \"uni g\", r = \"r\",                        value = \"fundiff\",                        analysis_vars = c(\"age\", \"survival_time\")) #> 128 sample have >= 4 values for FPCA; removing 0 samples  #extract uni fpc scores fpc = extract_fpca_scores(ovarian_FDA, 'uni g fpca') #> Joining with `by = join_by(sample_id)`"},{"path":"/reference/extract_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Model — extract_model","title":"Extract Model — extract_model","text":"Currently extracts functional cox models mixed functional cox models.","code":""},{"path":"/reference/extract_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Model — extract_model","text":"","code":"extract_model(mxFDAobject, metric, type, model_name)"},{"path":"/reference/extract_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Model — extract_model","text":"mxFDAobject object class mxFDA metric metric functional PCA data extract, e.g. 'uni k' type one \"cox\", \"mcox\", \"sofr\" specify type model extract model_name character string model name retrieve","code":""},{"path":"/reference/extract_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Model — extract_model","text":"fit functional model","code":""},{"path":[]},{"path":"/reference/extract_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Model — extract_model","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Model — extract_model","text":"","code":"#load ovarian mxFDA object data('ovarian_FDA')  #run the lfcm model ovarian_FDA = run_fcm(ovarian_FDA, model_name = \"fit_lfcm\",                       formula = survival_time ~ age, event = \"event\",                       metric = \"uni g\", r = \"r\", value = \"fundiff\",                       analysis_vars = c(\"age\", \"survival_time\"),                       afcm = FALSE)  #extract model mod = extract_model(ovarian_FDA, 'uni g', 'cox', 'fit_lfcm')"},{"path":"/reference/extract_spatial_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise spatial data in mxFDA object — extract_spatial_summary","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"Summarise spatial data mxFDA object","code":""},{"path":"/reference/extract_spatial_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"","code":"extract_spatial_summary(mxFDAobject, columns, grouping_columns = NULL)"},{"path":"/reference/extract_spatial_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"mxFDAobject object class mxFDA columns character vector column heading cells summarise grouping_columns character vector columns use grouping, region classification column","code":""},{"path":"/reference/extract_spatial_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"data frame percent total points per spatial sample columns. multiple levels present columns columns, multiple output columns provided.","code":""},{"path":"/reference/extract_spatial_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"Currently function experimental handles data text columns. Eventually, able handle data inputs HALO cells designated positive (1) negative (0) cell phenotypes.","code":""},{"path":"/reference/extract_spatial_summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_spatial_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise spatial data in mxFDA object — extract_spatial_summary","text":"","code":"#load data data(lung_df)  #create data frames for `mxFDA` object clinical = lung_df %>%   dplyr::select(image_id, patient_id, patientImage_id, gender,          age, survival_days, survival_status, stage) %>%   dplyr::distinct() #make small, just need to make sure it runs spatial = lung_df %>%   dplyr::select(-image_id, -gender, -age, -survival_days, -survival_status, -stage) %>%   dplyr::filter(patientImage_id %in% clinical$patientImage_id[1:10])  #create `mxFDA` object mxFDAobject = make_mxfda(metadata = clinical,                          spatial = spatial,                          subject_key = \"patient_id\",                          sample_key = \"patientImage_id\")  #get markers markers = colnames(mxFDAobject@Spatial) %>%   grep(\"pheno\", ., value = TRUE)  #extract summary df = extract_spatial_summary(mxFDAobject, markers)"},{"path":"/reference/extract_summary_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Summary Functions — extract_summary_functions","title":"Extract Summary Functions — extract_summary_functions","text":"Function extract spatial summary functions Spatial slot mxFDA object","code":""},{"path":"/reference/extract_summary_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Summary Functions — extract_summary_functions","text":"","code":"extract_summary_functions(   mxFDAobject,   r_vec = seq(0, 100, by = 10),   extract_func = c(univariate, bivariate),   summary_func = c(Kest, Lest, Gest),   markvar,   mark1,   mark2 = NULL,   edge_correction,   breaks = NULL )"},{"path":"/reference/extract_summary_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Summary Functions — extract_summary_functions","text":"mxFDAobject object class mxFDA r_vec Numeric vector radii evaluate spatial summary functions. Must begin 0. extract_func Defaults univariate, calculates univariate spatial summary functions. Choose bivariate bivariate spatial summary functions. summary_func Spatial summary function calculate. Options c(Kest, Lest, Gest) denote Ripley's K, Besag's L, nearest neighbor G function, respectively. markvar name variable denotes cell type(s) interest. Character. mark1 Character string denotes first cell type interest. mark2 Character string denotes second cell type interest calculating bivariate summary statistics. used calculating univariate statistics. edge_correction Character string denotes edge correction method spatial summary function. Kest Lest choose one c(\"border\", \"isotropic\", \"Ripley\", \"translate\", \"none\"). Gest choose one c(\"rs\", \"km\", \"han\") breaks integer value number breaks r_vec. Used entropy measure","code":""},{"path":"/reference/extract_summary_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Summary Functions — extract_summary_functions","text":"object class mxFDA containing corresponding spatial summary function slot filled. See make_mxfda() object structure details.","code":""},{"path":[]},{"path":"/reference/extract_summary_functions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract Summary Functions — extract_summary_functions","text":"Xiao, L., Ruppert, D., Zipunnikov, V., Crainiceanu, C. (2016). Fast covariance estimation high-dimensional functional data. Statistics Computing, 26, 409-421. DOI: 10.1007/s11222-014-9485-x. spatstat.explore::Kest() spatstat.explore::Gest() spatstat.explore::Lest() spatstat.explore::Kcross() spatstat.explore::Gcross() spatstat.explore::Lcross()","code":""},{"path":"/reference/extract_summary_functions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Summary Functions — extract_summary_functions","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_summary_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Summary Functions — extract_summary_functions","text":"","code":"#load ovarian FDA object data('ovarian_FDA')  #run function ovarian_FDA = extract_summary_functions(ovarian_FDA, r_vec = 0:100,                                         extract_func = univariate,                                         summary_func = Kest,                                         markvar = \"immune\",                                         mark1 = \"immune\",                                         edge_correction = \"trans\")"},{"path":"/reference/extract_surface.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Surface — extract_surface","title":"Extract Surface — extract_surface","text":"Function transforms functional models linear additive functional cox models afcmSurface lfcmSurface objects plotted.","code":""},{"path":"/reference/extract_surface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Surface — extract_surface","text":"","code":"extract_surface(   mxFDAobject,   metric,   model = NULL,   r = \"r\",   value = \"fundiff\",   grid_length = 100,   analysis_vars,   p = 0.05,   filter_cols = NULL )"},{"path":"/reference/extract_surface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Surface — extract_surface","text":"mxFDAobject object class mxFDA model model calculated wihtin metric spatial summary function extract surface model character string name model metric data r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". grid_length Length grid evaluate coefficient functions. analysis_vars variables used modeling FCM fit. p numeric p-value used predicting significant AFCM surface filter_cols named vector factors filter summary functions c(Derived_Column = \"Level_to_Filter\") format","code":""},{"path":"/reference/extract_surface.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Surface — extract_surface","text":"4 element list either class lfcmSurface afcmSurface depending class model Surface data.frame term predictions surface metric * radius area Prediction data.frame standard error terms surface. AFCM models use p set upper lower standard errors \\(\\beta_1\\) Metric character spatial summary function used; helps keep track running many models P-value numeric value input p-value","code":""},{"path":"/reference/extract_surface.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Surface — extract_surface","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/extract_surface.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Surface — extract_surface","text":"","code":"#load ovarian mxFDA object data('ovarian_FDA')  #run the lfcm model ovarian_FDA = run_fcm(ovarian_FDA, model_name = \"fit_lfcm\",                       formula = survival_time ~ age, event = \"event\",                       metric = \"uni g\", r = \"r\", value = \"fundiff\",                       analysis_vars = c(\"age\", \"survival_time\"),                       afcm = FALSE)  #extract surface model_surface = extract_surface(ovarian_FDA, metric = 'uni g',                                 model = 'fit_lfcm',                                 analysis_vars = 'age') #variables in model"},{"path":"/reference/extract_univariate.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_univariate — extract_univariate","title":"extract_univariate — extract_univariate","text":"Internal function called extract_summary_functions() calculate univariate spatial summary function single image.","code":""},{"path":"/reference/extract_univariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_univariate — extract_univariate","text":"","code":"extract_univariate(   mximg,   markvar,   mark1,   mark2,   r_vec,   func = c(Kest, Lest, Gest),   edge_correction,   breaks = NULL )"},{"path":"/reference/extract_univariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_univariate — extract_univariate","text":"mximg Dataframe cell-level multiplex imaging data single image. variables x y denote x y spatial locations cell. markvar name variable denotes cell type(s) interest. Character. mark1 dummy filler, unused mark2 dummy filler, unused r_vec Numeric vector radii evaluate spatial summary functions. Must begin 0. func Spatial summary function calculate. Options c(Kest, Lest, Gest) denote Ripley's K, Besag's L, nearest neighbor G function, respectively. edge_correction Character string denotes edge correction method spatial summary function. Kest Lest choose one c(\"border\", \"isotropic\", \"Ripley\", \"translate\", \"none\"). Gest choose one c(\"rs\", \"km\", \"han\") breaks ignored","code":""},{"path":"/reference/extract_univariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_univariate — extract_univariate","text":"data.frame containing: r radius values spatial summary function evaluated sumfun values spatial summary function csr values spatial summary function complete spatial randomness fundiff sumfun - csr, positive values indicate clustering negative values repulsion","code":""},{"path":[]},{"path":"/reference/extract_univariate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_univariate — extract_univariate","text":"Julia Wrobel julia.wrobel@emory.edu","code":""},{"path":"/reference/filter_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Data — filter_data","title":"Filter Data — filter_data","text":"used important want currently","code":""},{"path":"/reference/filter_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Data — filter_data","text":"","code":"filter_data(dat, filter_columns)"},{"path":"/reference/filter_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Data — filter_data","text":"dat data frame filter filter_columns named vector names column element filter ","code":""},{"path":"/reference/filter_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Data — filter_data","text":"data frame filtered","code":""},{"path":[]},{"path":"/reference/filter_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Spatial data — filter_spatial","title":"Filter Spatial data — filter_spatial","text":"function filter spatial data slot mxFDA object.","code":""},{"path":"/reference/filter_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Spatial data — filter_spatial","text":"","code":"filter_spatial(mxFDAobject, ..., based_on = \"meta\", force = FALSE)"},{"path":"/reference/filter_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Spatial data — filter_spatial","text":"mxFDAobject object class mxFDA ... expressions return logical TRUE/FALSE value evaluated columns meta data slot. expressions get passed dplyr::filter() must compatible. based_on character data slot use filtering, either 'meta', 'spatial'. Default 'meta'. force logical whether return empty spatial data filtering results 0 rows","code":""},{"path":"/reference/filter_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Spatial data — filter_spatial","text":"object class mxFDA spatial slot filtered. See make_mxfda() details object","code":""},{"path":"/reference/filter_spatial.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter Spatial data — filter_spatial","text":"dplyr::filter()","code":""},{"path":"/reference/filter_spatial.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter Spatial data — filter_spatial","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/filter_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Spatial data — filter_spatial","text":"","code":"#load ovarian mxFDA object data(ovarian_FDA)  #filter ages greater than 50 ovarian_FDA_age50 = filter_spatial(ovarian_FDA, age >= 50, based_on = 'meta')"},{"path":"/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data — get_data","title":"Get Data — get_data","text":"Returns data slots within mxfDA object","code":""},{"path":"/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data — get_data","text":"","code":"get_data(mxFDAobject, what, type)"},{"path":"/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Data — get_data","text":"mxFDAobject object class mxFDA character string length 2 return. produced unlisting \"uni k\" \"bi g fpca\" type strings type type data get summary function","code":""},{"path":"/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Data — get_data","text":"slot data","code":""},{"path":[]},{"path":"/reference/impute_fpca.html","id":null,"dir":"Reference","previous_headings":"","what":"impute_fpca — impute_fpca","title":"impute_fpca — impute_fpca","text":"Internal function called TITLE: regression function imputes missing data functional predictors using FPCA.","code":""},{"path":"/reference/impute_fpca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"impute_fpca — impute_fpca","text":"","code":"impute_fpca(   mxfundata,   id,   r = \"r\",   value = \"fundiff\",   knots = NULL,   analysis_vars,   smooth )"},{"path":"/reference/impute_fpca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"impute_fpca — impute_fpca","text":"mxfundata Dataframe spatial summary functions multiplex imaging data, long format. Can estimated using function extract_summary_functions provided separately. id Character string, name variable identifies unique subject. r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". knots Number knots defining spline basis. analysis_vars Optional list variables retained downstream analysis. smooth Option smooth data using FPCA.","code":""},{"path":"/reference/impute_fpca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"impute_fpca — impute_fpca","text":"dataframe missing function values (NA) value variable replaced estimates FPCA.","code":""},{"path":"/reference/impute_fpca.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"impute_fpca — impute_fpca","text":"Julia Wrobel julia.wrobel@emory.edu","code":""},{"path":"/reference/impute_fpca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"impute_fpca — impute_fpca","text":"","code":"# simulate data set.seed(1001)"},{"path":"/reference/is.empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Empty — is.empty","title":"Is Empty — is.empty","text":"checks whether slot empty mxfDA objecct","code":""},{"path":"/reference/is.empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Empty — is.empty","text":"","code":"is.empty(obj, slot.name)"},{"path":"/reference/is.empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Empty — is.empty","text":"obj object slots slot.name character string name slot","code":""},{"path":"/reference/is.empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Empty — is.empty","text":"TRUE, FALSE, stop command","code":""},{"path":[]},{"path":"/reference/lung_FDA.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplex imaging data from a non-small cell lung cancer study — lung_FDA","title":"Multiplex imaging data from a non-small cell lung cancer study — lung_FDA","text":"data adapted VectraPolarisData Bioconductor package. multiple ROIs patient.","code":""},{"path":"/reference/lung_FDA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplex imaging data from a non-small cell lung cancer study — lung_FDA","text":"","code":"lung_FDA"},{"path":[]},{"path":"/reference/lung_FDA.html","id":"lung-fda","dir":"Reference","previous_headings":"","what":"lung_FDA","title":"Multiplex imaging data from a non-small cell lung cancer study — lung_FDA","text":"mxFDA object augmented non-small cel lung cancer multiplex immunofluorescence data, NN G(r) calculated: Metadata information spatial samples column sample_key column Spatial cell-level information x y columns along sample_key link Metadata subject_key column Metadata may multiple sample_key values , akin patient IDs sample_key column Metadata Spatial 1:1 samples (unique per sample) univariate_summaries univariate summary slot nearest neighbor G calculared bivariate_summaries empty slot available bivariate summaries functional_pca empty slot functional PCA data summaries functional_cox empty slot functional models","code":""},{"path":"/reference/lung_FDA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Multiplex imaging data from a non-small cell lung cancer study — lung_FDA","text":"https://bioconductor.org/packages/release/data/experiment/html/VectraPolarisData.html","code":""},{"path":"/reference/lung_FDA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiplex imaging data from a non-small cell lung cancer study — lung_FDA","text":"Spatial summary functions lung cancer multiplex imaging data. data adapted VectraPolarisData Bioconductor package. Signal survival outcome spatial summary functions augmented teaching purposes. Spatial relationship summarized using nearest neighbor G function. Includes spatial samples 10 radii calculable G function","code":""},{"path":"/reference/lung_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplex imaging data from a non-small cell lung cancer study. — lung_df","title":"Multiplex imaging data from a non-small cell lung cancer study. — lung_df","text":"data adapted VectraPolarisData Bioconductor package. multiple ROIs patient. Data filtered include cells tumor compartment.","code":""},{"path":"/reference/lung_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplex imaging data from a non-small cell lung cancer study. — lung_df","text":"","code":"lung_df"},{"path":[]},{"path":"/reference/lung_df.html","id":"lung-df","dir":"Reference","previous_headings":"","what":"lung_df","title":"Multiplex imaging data from a non-small cell lung cancer study. — lung_df","text":"data frame 879,694 rows 19 columns: image_id Image id given patient patient_id Unique patient id age Patient age time cancer diagnosis survival_days Survival time diagnosis, days survival_status Censoring variable, 1 = death, 0 = censor x Cell x position y Cell y position","code":""},{"path":"/reference/lung_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Multiplex imaging data from a non-small cell lung cancer study. — lung_df","text":"https://bioconductor.org/packages/release/data/experiment/html/VectraPolarisData.html","code":""},{"path":"/reference/make_mxfda.html","id":null,"dir":"Reference","previous_headings":"","what":"Make mxFDA class object — make_mxfda","title":"Make mxFDA class object — make_mxfda","text":"Used create object class mxFDA can used mxfda package functional data analysis.","code":""},{"path":"/reference/make_mxfda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make mxFDA class object — make_mxfda","text":"","code":"make_mxfda(metadata, spatial = NULL, subject_key, sample_key)"},{"path":"/reference/make_mxfda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make mxFDA class object — make_mxfda","text":"metadata metadata columns subject_key sample_key spatial spatial information, either list df, column sample_key. Spatial can empty inputting data already derived. See add_summary_function() details. subject_key column name Metadata subject ID sample_key column linking Metadata Spatial data","code":""},{"path":"/reference/make_mxfda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make mxFDA class object — make_mxfda","text":"S4 object class mxFDA Metadata slot class data.frame contains sample subject level information Spatial slot class data.frame contains point level information within samples. example cells belonging TMA cores subject_key slot class character corresponds column Metadata slot groups samples subject level. example \"patient_id\" sample_key slot class character corresponds column Metadata Spatial slots links samples characteristics univariate_summaries slot class list univariate summary functions calculated Spatial stored bivariate_summaries slot class list bivariate summary functions calculated Spatial stored functional_pca slot class list FPCA results stored functional_mpca slot class list MFPCA results stored functional_cox slot class list functional cox model results stored functional_mcox slot class list mixed functional cox model results stored scalar_on_function slot class list functional models fit scalar responses","code":""},{"path":[]},{"path":"/reference/make_mxfda.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make mxFDA class object — make_mxfda","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/make_mxfda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make mxFDA class object — make_mxfda","text":"","code":"#select sample metadata clinical = lung_df %>%   dplyr::select(image_id, patient_id, patientImage_id,                 gender, age, survival_days, survival_status, stage) %>%   dplyr::distinct() #select the spatial information spatial = lung_df %>%   dplyr::select(-image_id, -gender, -age, -survival_days, -survival_status, -stage) sample_id_column = \"patientImage_id\" #create the mxFDA object mxFDAobject = make_mxfda(metadata = clinical,                          spatial = spatial,                          subject_key = \"patient_id\",                          sample_key = sample_id_column)"},{"path":"/reference/metric.exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Spatial Summary Exists — metric.exists","title":"Check if Spatial Summary Exists — metric.exists","text":"Makes sure processing functions spatial summary function calculated running FPCA models","code":""},{"path":"/reference/metric.exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Spatial Summary Exists — metric.exists","text":"","code":"metric.exists(mxFDAobject, metric)"},{"path":"/reference/metric.exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Spatial Summary Exists — metric.exists","text":"mxFDAobject object class mxFDA metric character vector split passed functions","code":""},{"path":"/reference/metric.exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Spatial Summary Exists — metric.exists","text":"stopped function slot summary functions","code":""},{"path":[]},{"path":"/reference/mxfda-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mxfda: A Functional Data Analysis Package for Spatial Single Cell Data — mxfda-package","title":"mxfda: A Functional Data Analysis Package for Spatial Single Cell Data — mxfda-package","text":"Methods tools deriving spatial summary functions single-cell imaging data performing functional data analyses. Functions can applied single-cell technologies spatial transcriptomics. Functional regression functional principal component analysis methods 'refund' package https://cran.r-project.org/package=refund calculation spatial summary functions 'spatstat' package https://spatstat.org/.","code":""},{"path":[]},{"path":"/reference/mxfda-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mxfda: A Functional Data Analysis Package for Spatial Single Cell Data — mxfda-package","text":"Maintainer: Alex Soupir alex.soupir@moffitt.org (ORCID) Authors: Julia Wrobel julia.wrobel@emory.edu (ORCID)","code":""},{"path":"/reference/one_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"1/0 Checker — one_zero","title":"1/0 Checker — one_zero","text":"1/0 Checker","code":""},{"path":"/reference/one_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"1/0 Checker — one_zero","text":"","code":"one_zero(vec)"},{"path":"/reference/one_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"1/0 Checker — one_zero","text":"vec vector hopefully 1s 0s anything","code":""},{"path":"/reference/one_zero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"1/0 Checker — one_zero","text":"TRUE FALSE depending something 0/1 vector","code":""},{"path":[]},{"path":"/reference/ovarian_FDA.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","title":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","text":"data adapted VectraPolarisData Bioconductor package comes tumor-microarray tissue samples 128 patients ovarian cancer. one patient per subject.","code":""},{"path":"/reference/ovarian_FDA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","text":"","code":"ovarian_FDA"},{"path":[]},{"path":"/reference/ovarian_FDA.html","id":"ovarian-fda","dir":"Reference","previous_headings":"","what":"ovarian_FDA","title":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","text":"mxFDA object augmented ovarian cancer multiplex immunofluorescence data, NN G(r) calculated: Metadata information spatial samples column sample_key column Spatial cell-level information x y columns along sample_key link Metadata subject_key column Metadata may multiple sample_key values , akin patient IDs sample_key column Metadata Spatial 1:1 samples (unique per sample) univariate_summaries univariate summary slot nearest neighbor G calculared bivariate_summaries empty slot available bivariate summaries functional_pca empty slot functional PCA data summaries functional_cox empty slot functional models","code":""},{"path":"/reference/ovarian_FDA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","text":"https://bioconductor.org/packages/release/data/experiment/html/VectraPolarisData.html","code":""},{"path":"/reference/ovarian_FDA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiplex imaging data from an ovarian cancer tumor microarray — ovarian_FDA","text":"Spatial summary functions ovarian cancer multiplex imaging data. data adapted VectraPolarisData Bioconductor package. Signal survival outcome spatial summary functions augmented teaching purposes. Spatial relationship summarized using nearest neighbor G function.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot.afcmSurface.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot afcm object — plot.afcmSurface","title":"Plot afcm object — plot.afcmSurface","text":"Plot afcm object","code":""},{"path":"/reference/plot.afcmSurface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot afcm object — plot.afcmSurface","text":"","code":"# S3 method for afcmSurface plot(x, ...)"},{"path":"/reference/plot.afcmSurface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot afcm object — plot.afcmSurface","text":"x object class afcmSurface plotted ... currently ignored","code":""},{"path":"/reference/plot.afcmSurface.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot afcm object — plot.afcmSurface","text":"object compatable ggplot2","code":""},{"path":"/reference/plot.afcmSurface.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot afcm object — plot.afcmSurface","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/plot.lfcmSurface.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot lfcm surface — plot.lfcmSurface","title":"Plot lfcm surface — plot.lfcmSurface","text":"Plot lfcm surface","code":""},{"path":"/reference/plot.lfcmSurface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot lfcm surface — plot.lfcmSurface","text":"","code":"# S3 method for lfcmSurface plot(x, ...)"},{"path":"/reference/plot.lfcmSurface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot lfcm surface — plot.lfcmSurface","text":"x object class lfcmSurface plotted ... currently ignored","code":""},{"path":"/reference/plot.lfcmSurface.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot lfcm surface — plot.lfcmSurface","text":"object compatable ggplot2","code":""},{"path":"/reference/plot.lfcmSurface.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot lfcm surface — plot.lfcmSurface","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/plot.mxFDA.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot mxFDA object — plot.mxFDA","title":"Plot mxFDA object — plot.mxFDA","text":"Plot mxFDA object","code":""},{"path":"/reference/plot.mxFDA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot mxFDA object — plot.mxFDA","text":"","code":"# S3 method for mxFDA plot(x, filter_cols = NULL, ...)"},{"path":"/reference/plot.mxFDA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot mxFDA object — plot.mxFDA","text":"x object class mxFDA plotted filter_cols column key filter ... additional paramters including y, , sampleID inform whats plotted","code":""},{"path":"/reference/plot.mxFDA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot mxFDA object — plot.mxFDA","text":"object class ggplot compatible ggplot2 aesthetics","code":""},{"path":"/reference/plot.mxFDA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot mxFDA object — plot.mxFDA","text":"multiple metrics included derived table, extra parameter filter_cols format c(Derived_Column = \"Level_to_Filter\") return curves Derived_Column level Level_to_Filter plotting mFPCA objects, additional arguments level1 level2 help indicate FPCA level 1 level 2 plot","code":""},{"path":"/reference/plot.mxFDA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot mxFDA object — plot.mxFDA","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/plot.mxFDA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot mxFDA object — plot.mxFDA","text":"","code":"#set seed set.seed(333) #plotting summary data(\"ovarian_FDA\") plot(ovarian_FDA, y = 'fundiff', what = 'uni g')  #running fpca ovarian_FDA = run_fpca(ovarian_FDA, metric = \"uni g\", r = \"r\", value = \"fundiff\",                        lightweight = TRUE,                        pve = .99) #> 128 sample have >= 4 values for FPCA; removing 0 samples #plot fpca plot(ovarian_FDA, what = 'uni g fpca', pc_choice = 1)"},{"path":"/reference/plot.sofr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sofr object — plot.sofr","title":"Plot sofr object — plot.sofr","text":"Plot sofr object","code":""},{"path":"/reference/plot.sofr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sofr object — plot.sofr","text":"","code":"# S3 method for sofr plot(x, ...)"},{"path":"/reference/plot.sofr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sofr object — plot.sofr","text":"x object class sofr plotted ... currently ignored","code":""},{"path":"/reference/plot.sofr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot sofr object — plot.sofr","text":"object compatable ggplot2","code":""},{"path":"/reference/plot.sofr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot sofr object — plot.sofr","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/plot_fpc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","text":"Produces ggplot mean plus minus two standard deviations selected FPC.","code":""},{"path":"/reference/plot_fpc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","text":"","code":"plot_fpc(obj, pc_choice)"},{"path":"/reference/plot_fpc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","text":"obj fpca object plotted. pc_choice FPC plotted.","code":""},{"path":"/reference/plot_fpc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","text":"object class ggplot","code":""},{"path":[]},{"path":"/reference/plot_fpc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_fpc","text":"Julia Wrobel julia.wrobel@emory.edu","code":""},{"path":"/reference/plot_mfpc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","text":"Produces ggplot mean plus minus two standard deviations selected FPC.","code":""},{"path":"/reference/plot_mfpc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","text":"","code":"plot_mfpc(obj, pc_choice_level1, pc_choice_level2)"},{"path":"/reference/plot_mfpc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","text":"obj fpca object plotted. pc_choice_level1, pc_choice_level2 FPC plotted.","code":""},{"path":"/reference/plot_mfpc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","text":"list objects class ggplot","code":""},{"path":[]},{"path":"/reference/plot_mfpc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create plot of mean +/- scaled eigenfunctions from FPCA — plot_mfpc","text":"Julia Wrobel julia.wrobel@emory.edu","code":""},{"path":"/reference/process_fcm.html","id":null,"dir":"Reference","previous_headings":"","what":"process_fcm — process_fcm","title":"process_fcm — process_fcm","text":"Internal function called run_fcm transforms long format functional data use linear additive functional Cox model.","code":""},{"path":"/reference/process_fcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"process_fcm — process_fcm","text":"","code":"process_fcm(   mxfundata,   id,   r = \"r\",   value = \"fundiff\",   analysis_vars,   quantile_transform = FALSE,   multilevel = FALSE )"},{"path":"/reference/process_fcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"process_fcm — process_fcm","text":"mxfundata Dataframe spatial summary functions multiplex imaging data, long format. Can estimated using function extract_summary_functions provided separately. id Character string, name variable identifies unique subject. r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". analysis_vars Optional list variables retained downstream analysis. quantile_transform TRUE, quantile transformation applied functional predictor modeling","code":""},{"path":"/reference/process_fcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"process_fcm — process_fcm","text":"dataframe matrix-valued covariates l_int, t_int, func use linear additive functional Cox model.","code":""},{"path":"/reference/process_fcm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"process_fcm — process_fcm","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/process_fcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"process_fcm — process_fcm","text":"","code":"# simulate data set.seed(1001)"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. spatstat.explore Gcross, Gest, Kcross, Kest, Lcross, Lest","code":""},{"path":"/reference/run_fcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Function Cox Models — run_fcm","title":"Run Function Cox Models — run_fcm","text":"Fit functional Cox regression model.","code":""},{"path":"/reference/run_fcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Function Cox Models — run_fcm","text":"","code":"run_fcm(   mxFDAobject,   model_name,   formula,   event = \"event\",   metric = \"uni k\",   r = \"r\",   value = \"fundiff\",   afcm = FALSE,   smooth = FALSE,   filter_cols = NULL,   ...,   knots = NULL )"},{"path":"/reference/run_fcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Function Cox Models — run_fcm","text":"mxFDAobject Dataframe spatial summary functions multiplex imaging data, long format. Can estimated using function extract_summary_functions provided separately. model_name character string give fit model functional cox slot formula Formula fed mgcv form survival_time ~ x1 + x2. contain functional predictor. Character valued. Data must contain censoring variable called \"event\". event character string column Metadata contains 1/0 survival event metric name calculated spatial metric use r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". afcm TRUE, runs additive functional Cox model. FALSE, runs linear functional cox model. Defaults linear functional cox model. smooth Option smooth data using FPCA. Defaults FALSE. filter_cols named vector factors filter summary functions c(Derived_Column = \"Level_to_Filter\") format ... Optional arguments passed fpca.face knots Number knots defining spline basis.","code":""},{"path":"/reference/run_fcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Function Cox Models — run_fcm","text":"list linear additive functional Cox model fit. See mgcv::gam details.","code":""},{"path":[]},{"path":"/reference/run_fcm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run Function Cox Models — run_fcm","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/run_fcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Function Cox Models — run_fcm","text":"","code":"#load ovarian mxFDA object data('ovarian_FDA')  #run the lfcm model ovarian_FDA = run_fcm(ovarian_FDA, model_name = \"fit_lfcm\",                       formula = survival_time ~ age, event = \"event\",                       metric = \"uni g\", r = \"r\", value = \"fundiff\",                       afcm = FALSE)"},{"path":"/reference/run_fpca.html","id":null,"dir":"Reference","previous_headings":"","what":"run_fpca — run_fpca","title":"run_fpca — run_fpca","text":"wrapper function fpca.face refund package. EXPAND","code":""},{"path":"/reference/run_fpca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_fpca — run_fpca","text":"","code":"run_fpca(   mxFDAobject,   metric = \"uni k\",   r = \"r\",   value = \"fundiff\",   knots = NULL,   analysis_vars = NULL,   lightweight = FALSE,   filter_cols = NULL,   ... )"},{"path":"/reference/run_fpca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_fpca — run_fpca","text":"mxFDAobject object class mxFDA created make_mxfda metrics derived extract_summary_functions metric name calculated spatial metric use r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". knots Number knots defining spline basis.Defaults number measurements per function divided 2. analysis_vars Optional list variables retained downstream analysis. lightweight Default FALSE. TRUE, removes Y Yhat returned FPCA object. good option select large datasets. filter_cols named vector factors filter summary functions c(Derived_Column = \"Level_to_Filter\") format ... Optional arguments passed fpca.face","code":""},{"path":"/reference/run_fpca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_fpca — run_fpca","text":"mxFDA object functional_pca slot filled respective spatial summary function containing: mxfundata original dataframe spatial summary functions, scores FPCA appended downstream modeling fpc_object list class \"fpca\" elements described documentation  refund::fpca.face","code":""},{"path":"/reference/run_fpca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"run_fpca — run_fpca","text":"filter_cols parameter useful summary function input user using add_summary_function() multiple marks assessed; column called \"Markers\" tumor infiltrating lymphocytes well cytotoxic T cells. parameter allows filtering include one .","code":""},{"path":"/reference/run_fpca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"run_fpca — run_fpca","text":"Xiao, L., Ruppert, D., Zipunnikov, V., Crainiceanu, C. (2016). Fast covariance estimation high-dimensional functional data. Statistics Computing, 26, 409-421. DOI: 10.1007/s11222-014-9485-x.","code":""},{"path":"/reference/run_fpca.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"run_fpca — run_fpca","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/run_fpca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"run_fpca — run_fpca","text":"","code":"#load ovarian mxFDA object data('ovarian_FDA')  #run the FPCA ovarian_FDA = run_fpca(ovarian_FDA, metric = \"uni g\", r = \"r\", value = \"fundiff\",                        lightweight = TRUE,                        pve = .99) #> 128 sample have >= 4 values for FPCA; removing 0 samples"},{"path":"/reference/run_mfcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Run function Cox models for data with multiple samples per subject — run_mfcm","title":"Run function Cox models for data with multiple samples per subject — run_mfcm","text":"Fit functional Cox regression model multiple functions per subject, arise multiple samples per subject. necessary subjects number samples.function first performs multilevel functional principal components analysis (MFPCA) decomposition spatial summary function. , average curve subject used functional Cox model (FCM). Variation around subject's mean captured calculating standard deviation level 2 scores MFPCA, including scalar variable FCM called \"level2_score_sd\".","code":""},{"path":"/reference/run_mfcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run function Cox models for data with multiple samples per subject — run_mfcm","text":"","code":"run_mfcm(   mxFDAobject,   model_name,   formula,   event = \"event\",   metric = \"uni k\",   r = \"r\",   value = \"fundiff\",   afcm = FALSE,   filter_cols = NULL,   pve = 0.99,   ...,   knots = NULL )"},{"path":"/reference/run_mfcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run function Cox models for data with multiple samples per subject — run_mfcm","text":"mxFDAobject Dataframe spatial summary functions multiplex imaging data, long format. Can estimated using function extract_summary_functions provided separately. model_name character string give fit model functional cox slot formula Formula fed mgcv form survival_time ~ x1 + x2. contain functional predictor. Character valued. Data must contain censoring variable called \"event\". event character string column Metadata contains 1/0 survival event metric name calculated spatial metric use r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". afcm TRUE, runs additive functional Cox model. FALSE, runs linear functional cox model. Defaults linear functional cox model. filter_cols named vector factors filter summary functions c(Derived_Column = \"Level_to_Filter\") format pve Proportion variance explained multilevel functional principal components analysis mfpca step ... Optional arguments passed fpca.face knots Number knots defining spline basis.","code":""},{"path":"/reference/run_mfcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run function Cox models for data with multiple samples per subject — run_mfcm","text":"list linear additive functional Cox model fit. See mgcv::gam details.","code":""},{"path":[]},{"path":"/reference/run_mfcm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run function Cox models for data with multiple samples per subject — run_mfcm","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/run_mfcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run function Cox models for data with multiple samples per subject — run_mfcm","text":"","code":"#load ovarian mxFDA object data('lung_FDA')  # run the lfcm model lung_FDA = run_mfcm(lung_FDA, model_name = \"fit_mlfcm\",                       formula = survival_days ~ age,                       event = \"survival_status\",                       metric = \"uni g\", r = \"r\", value = \"fundiff\",                       pve = 0.99,                       afcm = FALSE) #> 207 sample have >= 4 values for FPCA; removing 0 samples #> Joining with `by = join_by(patient_id)` #> Joining with `by = join_by(patient_id)`"},{"path":"/reference/run_mfpca.html","id":null,"dir":"Reference","previous_headings":"","what":"run_fpca — run_mfpca","title":"run_fpca — run_mfpca","text":"wrapper function mfpca.face refund package. EXPAND","code":""},{"path":"/reference/run_mfpca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_fpca — run_mfpca","text":"","code":"run_mfpca(   mxFDAobject,   metric = \"uni k\",   r = \"r\",   value = \"fundiff\",   knots = NULL,   lightweight = FALSE,   ... )"},{"path":"/reference/run_mfpca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_fpca — run_mfpca","text":"mxFDAobject object class mxFDA created make_mxfda() metrics derived extract_summary_functions() metric name calculated spatial metric use r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". knots Number knots defining spline basis.Defaults number measurements per function divided 2. lightweight Default FALSE. TRUE, removes Y Yhat returned mFPCA object. good option select large datasets. ... Optional arguments passed mfpca.face","code":""},{"path":"/reference/run_mfpca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_fpca — run_mfpca","text":"mxFDA object  functional_mpca slot respective spatial summary function containing: mxfundata original dataframe spatial summary functions, scores FPCA appended downstream modeling fpc_object list class \"fpca\" elements described documentation  refund::fpca.face","code":""},{"path":[]},{"path":"/reference/run_mfpca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"run_fpca — run_mfpca","text":"Xiao, L., Ruppert, D., Zipunnikov, V., Crainiceanu, C. (2016). Fast covariance estimation high-dimensional functional data. Statistics Computing, 26, 409-421. DOI: 10.1007/s11222-014-9485-x.","code":""},{"path":"/reference/run_mfpca.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"run_fpca — run_mfpca","text":"unknown first.last@domain.extension Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/run_mfpca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"run_fpca — run_mfpca","text":"","code":"#load data data(lung_FDA)  #run mixed fpca lung_FDA = run_mfpca(lung_FDA, metric = 'uni g') #> 207 sample have >= 4 values for FPCA; removing 0 samples #> Joining with `by = join_by(patient_id)`"},{"path":"/reference/run_sofr.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Scalar on Function Regression — run_sofr","title":"Run Scalar on Function Regression — run_sofr","text":"Fit scalar--function regression model. Uses refund::pfr hood computations, stores results mxfda object.","code":""},{"path":"/reference/run_sofr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Scalar on Function Regression — run_sofr","text":"","code":"run_sofr(   mxFDAobject,   model_name,   formula,   family = \"gaussian\",   metric = \"uni k\",   r = \"r\",   value = \"fundiff\",   smooth = FALSE,   filter_cols = NULL,   ...,   knots = NULL )"},{"path":"/reference/run_sofr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Scalar on Function Regression — run_sofr","text":"mxFDAobject Dataframe spatial summary functions multiplex imaging data, long format. Can estimated using function extract_summary_functions provided separately. model_name character string give fit model formula Formula fed mgcv form outcome ~ x1 + x2. contain functional predictor. Character valued. family Exponential family distribution passed mgcv::gam. Defaults \"gaussian\". Select \"binomial\" binary outcome. metric Name calculated spatial metric use r Character string, name variable identifies function domain (usually radius spatial summary functions). Default \"r\". value Character string, name variable identifies spatial summary function values. Default \"fundiff\". smooth Option smooth data using FPCA. Defaults FALSE. filter_cols named vector factors filter summary functions c(Derived_Column = \"Level_to_Filter\") format ... Optional arguments passed fpca.face knots Number knots defining spline basis.","code":""},{"path":"/reference/run_sofr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Scalar on Function Regression — run_sofr","text":"list linear additive functional Cox model fit. See mgcv::gam details.","code":""},{"path":[]},{"path":"/reference/run_sofr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run Scalar on Function Regression — run_sofr","text":"Julia Wrobel julia.wrobel@emory.edu Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/run_sofr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Scalar on Function Regression — run_sofr","text":"","code":"#load ovarian mxFDA object data('ovarian_FDA')  # run scalar on function regression model with a continuous outcome (age) ovarian_FDA = run_sofr(ovarian_FDA,                        model_name = \"fit_sofr\",                        formula = age~stage,                        metric = \"uni g\", r = \"r\", value = \"fundiff\") #> 128 sample have >= 4 values for FPCA; removing 0 samples  # run scalar on function regression model with a binary outcome (stage) # also known as functional logistic regression ovarian_FDA = run_sofr(ovarian_FDA,                        model_name = \"fit_sofr\",                        formula = stage~age,                        family = \"binomial\",                        metric = \"uni g\", r = \"r\", value = \"fundiff\") #> 128 sample have >= 4 values for FPCA; removing 0 samples"},{"path":"/reference/spatialTIME_summary_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"spatialTIME summary function extraction — spatialTIME_summary_functions","title":"spatialTIME summary function extraction — spatialTIME_summary_functions","text":"spatialTIME summary function extraction","code":""},{"path":"/reference/spatialTIME_summary_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spatialTIME summary function extraction — spatialTIME_summary_functions","text":"","code":"spatialTIME_summary_functions(   mxFDAobject,   metric = \"uni k\",   markers = NULL,   r_range = 0:100,   num_permutations = 50,   edge_correction = \"trans\",   permute = TRUE,   workers = 1,   xloc = \"x\",   yloc = \"y\" )"},{"path":"/reference/spatialTIME_summary_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spatialTIME summary function extraction — spatialTIME_summary_functions","text":"mxFDAobject object class mxFDA calculate summary functions metric string vector combination uni/bi k/g markers column names spatial r_range vector radii calculate metrics num_permutations integer number permutations perform edge_correction character vector length 1 2 depending metrics edge corrections perform permute logical whether permute CSR . Required TRUE Nearest Neighbor G workers integer number cores use calculate derived variables xloc, yloc columns spatial data use point locations","code":""},{"path":"/reference/spatialTIME_summary_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spatialTIME summary function extraction — spatialTIME_summary_functions","text":"mxFDA object summary function slots filled according input metric","code":""},{"path":[]},{"path":"/reference/spatialTIME_summary_functions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"spatialTIME summary function extraction — spatialTIME_summary_functions","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/spatialTIME_summary_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"spatialTIME summary function extraction — spatialTIME_summary_functions","text":"","code":"# example code"},{"path":"/reference/summary.mxFDA.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for object of class mxFDA — summary.mxFDA","title":"Summary method for object of class mxFDA — summary.mxFDA","text":"Summary method object class mxFDA","code":""},{"path":"/reference/summary.mxFDA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for object of class mxFDA — summary.mxFDA","text":"","code":"# S3 method for mxFDA summary(object, ...)"},{"path":"/reference/summary.mxFDA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for object of class mxFDA — summary.mxFDA","text":"object object class mxFDA ... unused currently","code":""},{"path":"/reference/summary.mxFDA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for object of class mxFDA — summary.mxFDA","text":"summary object R console","code":""},{"path":[]},{"path":"/reference/summary.mxFDA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary method for object of class mxFDA — summary.mxFDA","text":"Alex Soupir alex.soupir@moffitt.org","code":""},{"path":"/reference/univariate.html","id":null,"dir":"Reference","previous_headings":"","what":"univariate — univariate","title":"univariate — univariate","text":"Internal function called extract_summary_functions() calculate univariate spatial summary function single image.","code":""},{"path":"/reference/univariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"univariate — univariate","text":"","code":"univariate(   mximg,   markvar,   mark1,   mark2,   r_vec,   func = c(Kest, Lest, Gest),   edge_correction,   breaks = NULL )"},{"path":"/reference/univariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"univariate — univariate","text":"mximg Dataframe cell-level multiplex imaging data single image. variables x y denote x y spatial locations cell. markvar name variable denotes cell type(s) interest. Character. mark1 dummy filler, unused mark2 dummy filler, unused r_vec Numeric vector radii evaluate spatial summary functions. Must begin 0. func Spatial summary function calculate. Options c(Kest, Lest, Gest) denote Ripley's K, Besag's L, nearest neighbor G function, respectively. edge_correction Character string denotes edge correction method spatial summary function. Kest Lest choose one c(\"border\", \"isotropic\", \"Ripley\", \"translate\", \"none\"). Gest choose one c(\"rs\", \"km\", \"han\") breaks ignored","code":""},{"path":"/reference/univariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"univariate — univariate","text":"data.frame containing: r radius values spatial summary function evaluated sumfun values spatial summary function csr values spatial summary function complete spatial randomness fundiff sumfun - csr, positive values indicate clustering negative values repulsion","code":""},{"path":[]},{"path":"/reference/univariate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"univariate — univariate","text":"Julia Wrobel julia.wrobel@emory.edu","code":""},{"path":[]},{"path":"/news/index.html","id":"mxfda-v010","dir":"Changelog","previous_headings":"","what":"mxfda v0.1.0","title":"mxfda v0.1.0","text":"starting package ","code":""}]
